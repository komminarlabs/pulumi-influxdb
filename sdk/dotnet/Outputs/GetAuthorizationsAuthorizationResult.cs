// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace KomminarLabs.InfluxDB.Outputs
{

    [OutputType]
    public sealed class GetAuthorizationsAuthorizationResult
    {
        /// <summary>
        /// Authorizations creation date.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// A description of the token.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The authorization ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// An Organization name. Specifies the organization that owns the authorization.
        /// </summary>
        public readonly string Org;
        /// <summary>
        /// An organization ID. Specifies the organization that owns the authorization.
        /// </summary>
        public readonly string OrgId;
        /// <summary>
        /// A list of permissions for an authorization.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAuthorizationsAuthorizationPermissionResult> Permissions;
        /// <summary>
        /// Status of the token.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The API token.
        /// </summary>
        public readonly string Token;
        /// <summary>
        /// Last Authorizations update date.
        /// </summary>
        public readonly string UpdatedAt;
        /// <summary>
        /// A user name. Specifies the user that the authorization is scoped to.
        /// </summary>
        public readonly string User;
        /// <summary>
        /// A user ID. Specifies the user that the authorization is scoped to.
        /// </summary>
        public readonly string UserId;

        [OutputConstructor]
        private GetAuthorizationsAuthorizationResult(
            string createdAt,

            string description,

            string id,

            string org,

            string orgId,

            ImmutableArray<Outputs.GetAuthorizationsAuthorizationPermissionResult> permissions,

            string status,

            string token,

            string updatedAt,

            string user,

            string userId)
        {
            CreatedAt = createdAt;
            Description = description;
            Id = id;
            Org = org;
            OrgId = orgId;
            Permissions = permissions;
            Status = status;
            Token = token;
            UpdatedAt = updatedAt;
            User = user;
            UserId = userId;
        }
    }
}
