// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace KomminarLabs.InfluxDB.Outputs
{

    [OutputType]
    public sealed class GetBucketsBucketResult
    {
        /// <summary>
        /// Bucket creation date.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// A description of the bucket.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A Bucket ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A Bucket name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// An organization ID.
        /// </summary>
        public readonly string OrgId;
        /// <summary>
        /// The duration in seconds for how long data will be kept in the database. `0` represents infinite retention.
        /// </summary>
        public readonly int RetentionPeriod;
        /// <summary>
        /// The Bucket type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Last bucket update date.
        /// </summary>
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetBucketsBucketResult(
            string createdAt,

            string description,

            string id,

            string name,

            string orgId,

            int retentionPeriod,

            string type,

            string updatedAt)
        {
            CreatedAt = createdAt;
            Description = description;
            Id = id;
            Name = name;
            OrgId = orgId;
            RetentionPeriod = retentionPeriod;
            Type = type;
            UpdatedAt = updatedAt;
        }
    }
}
