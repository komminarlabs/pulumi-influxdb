// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Retrieves a user.
 */
export function getUser(args: GetUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("influxdb:index/getUser:getUser", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserArgs {
    /**
     * The user ID.
     */
    id: string;
}

/**
 * A collection of values returned by getUser.
 */
export interface GetUserResult {
    /**
     * The user ID.
     */
    readonly id: string;
    /**
     * The user name.
     */
    readonly name: string;
    /**
     * The organization ID that the user belongs to. Null if the user is not a member of any organization.
     */
    readonly orgId: string;
    /**
     * The role of the user in the organization (`member` or `owner`). Null if the user is not a member of any organization.
     */
    readonly orgRole: string;
    /**
     * The password of the user. This will be always `null`.
     */
    readonly password: string;
    /**
     * The status of a user.
     */
    readonly status: string;
}
/**
 * Retrieves a user.
 */
export function getUserOutput(args: GetUserOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetUserResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("influxdb:index/getUser:getUser", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserOutputArgs {
    /**
     * The user ID.
     */
    id: pulumi.Input<string>;
}
