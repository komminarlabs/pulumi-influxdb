// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Retrieves an authorization. Use this data source to retrieve information about an API token, including the token's permissions and the user that the token is scoped to.
 */
export function getAuthorization(args: GetAuthorizationArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthorizationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("influxdb:index/getAuthorization:getAuthorization", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getAuthorization.
 */
export interface GetAuthorizationArgs {
    /**
     * A resource ID. Identifies a specific resource.
     */
    id: string;
}

/**
 * A collection of values returned by getAuthorization.
 */
export interface GetAuthorizationResult {
    /**
     * Authorization creation date.
     */
    readonly createdAt: string;
    /**
     * A description of the token.
     */
    readonly description: string;
    /**
     * The authorization ID.
     */
    readonly id: string;
    /**
     * Organization name. Specifies the organization that owns the authorization.
     */
    readonly org: string;
    /**
     * An organization ID. Specifies the organization that owns the authorization.
     */
    readonly orgId: string;
    /**
     * A list of permissions for an authorization.
     */
    readonly permissions: outputs.GetAuthorizationPermission[];
    /**
     * Status of the token.
     */
    readonly status: string;
    /**
     * The API token.
     */
    readonly token: string;
    /**
     * Last Authorization update date.
     */
    readonly updatedAt: string;
    /**
     * A user name. Specifies the user that the authorization is scoped to.
     */
    readonly user: string;
    /**
     * A user ID. Specifies the user that the authorization is scoped to.
     */
    readonly userId: string;
}
/**
 * Retrieves an authorization. Use this data source to retrieve information about an API token, including the token's permissions and the user that the token is scoped to.
 */
export function getAuthorizationOutput(args: GetAuthorizationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAuthorizationResult> {
    return pulumi.output(args).apply((a: any) => getAuthorization(a, opts))
}

/**
 * A collection of arguments for invoking getAuthorization.
 */
export interface GetAuthorizationOutputArgs {
    /**
     * A resource ID. Identifies a specific resource.
     */
    id: pulumi.Input<string>;
}
