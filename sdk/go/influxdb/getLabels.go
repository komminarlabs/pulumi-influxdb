// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package influxdb

import (
	"context"
	"reflect"

	"github.com/komminarlabs/pulumi-influxdb/sdk/go/influxdb/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// List all labels.
func GetLabels(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetLabelsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLabelsResult
	err := ctx.Invoke("influxdb:index/getLabels:getLabels", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getLabels.
type GetLabelsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id     string           `pulumi:"id"`
	Labels []GetLabelsLabel `pulumi:"labels"`
}

func GetLabelsOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetLabelsResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetLabelsResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("influxdb:index/getLabels:getLabels", nil, GetLabelsResultOutput{}, options).(GetLabelsResultOutput), nil
	}).(GetLabelsResultOutput)
}

// A collection of values returned by getLabels.
type GetLabelsResultOutput struct{ *pulumi.OutputState }

func (GetLabelsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLabelsResult)(nil)).Elem()
}

func (o GetLabelsResultOutput) ToGetLabelsResultOutput() GetLabelsResultOutput {
	return o
}

func (o GetLabelsResultOutput) ToGetLabelsResultOutputWithContext(ctx context.Context) GetLabelsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetLabelsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLabelsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetLabelsResultOutput) Labels() GetLabelsLabelArrayOutput {
	return o.ApplyT(func(v GetLabelsResult) []GetLabelsLabel { return v.Labels }).(GetLabelsLabelArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLabelsResultOutput{})
}
