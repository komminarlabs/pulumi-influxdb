// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package influxdb

import (
	"context"
	"reflect"

	"github.com/komminarlabs/pulumi-influxdb/sdk/go/influxdb/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AuthorizationPermission struct {
	// Permission action. Valid values are `read` or `write`.
	Action   string                          `pulumi:"action"`
	Resource AuthorizationPermissionResource `pulumi:"resource"`
}

// AuthorizationPermissionInput is an input type that accepts AuthorizationPermissionArgs and AuthorizationPermissionOutput values.
// You can construct a concrete instance of `AuthorizationPermissionInput` via:
//
//	AuthorizationPermissionArgs{...}
type AuthorizationPermissionInput interface {
	pulumi.Input

	ToAuthorizationPermissionOutput() AuthorizationPermissionOutput
	ToAuthorizationPermissionOutputWithContext(context.Context) AuthorizationPermissionOutput
}

type AuthorizationPermissionArgs struct {
	// Permission action. Valid values are `read` or `write`.
	Action   pulumi.StringInput                   `pulumi:"action"`
	Resource AuthorizationPermissionResourceInput `pulumi:"resource"`
}

func (AuthorizationPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPermission)(nil)).Elem()
}

func (i AuthorizationPermissionArgs) ToAuthorizationPermissionOutput() AuthorizationPermissionOutput {
	return i.ToAuthorizationPermissionOutputWithContext(context.Background())
}

func (i AuthorizationPermissionArgs) ToAuthorizationPermissionOutputWithContext(ctx context.Context) AuthorizationPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPermissionOutput)
}

// AuthorizationPermissionArrayInput is an input type that accepts AuthorizationPermissionArray and AuthorizationPermissionArrayOutput values.
// You can construct a concrete instance of `AuthorizationPermissionArrayInput` via:
//
//	AuthorizationPermissionArray{ AuthorizationPermissionArgs{...} }
type AuthorizationPermissionArrayInput interface {
	pulumi.Input

	ToAuthorizationPermissionArrayOutput() AuthorizationPermissionArrayOutput
	ToAuthorizationPermissionArrayOutputWithContext(context.Context) AuthorizationPermissionArrayOutput
}

type AuthorizationPermissionArray []AuthorizationPermissionInput

func (AuthorizationPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPermission)(nil)).Elem()
}

func (i AuthorizationPermissionArray) ToAuthorizationPermissionArrayOutput() AuthorizationPermissionArrayOutput {
	return i.ToAuthorizationPermissionArrayOutputWithContext(context.Background())
}

func (i AuthorizationPermissionArray) ToAuthorizationPermissionArrayOutputWithContext(ctx context.Context) AuthorizationPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPermissionArrayOutput)
}

type AuthorizationPermissionOutput struct{ *pulumi.OutputState }

func (AuthorizationPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPermission)(nil)).Elem()
}

func (o AuthorizationPermissionOutput) ToAuthorizationPermissionOutput() AuthorizationPermissionOutput {
	return o
}

func (o AuthorizationPermissionOutput) ToAuthorizationPermissionOutputWithContext(ctx context.Context) AuthorizationPermissionOutput {
	return o
}

// Permission action. Valid values are `read` or `write`.
func (o AuthorizationPermissionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationPermission) string { return v.Action }).(pulumi.StringOutput)
}

func (o AuthorizationPermissionOutput) Resource() AuthorizationPermissionResourceOutput {
	return o.ApplyT(func(v AuthorizationPermission) AuthorizationPermissionResource { return v.Resource }).(AuthorizationPermissionResourceOutput)
}

type AuthorizationPermissionArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPermission)(nil)).Elem()
}

func (o AuthorizationPermissionArrayOutput) ToAuthorizationPermissionArrayOutput() AuthorizationPermissionArrayOutput {
	return o
}

func (o AuthorizationPermissionArrayOutput) ToAuthorizationPermissionArrayOutputWithContext(ctx context.Context) AuthorizationPermissionArrayOutput {
	return o
}

func (o AuthorizationPermissionArrayOutput) Index(i pulumi.IntInput) AuthorizationPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorizationPermission {
		return vs[0].([]AuthorizationPermission)[vs[1].(int)]
	}).(AuthorizationPermissionOutput)
}

type AuthorizationPermissionResource struct {
	// A resource ID. Identifies a specific resource.
	Id *string `pulumi:"id"`
	// The name of the resource. **Note:** not all resource types have a name property.
	Name *string `pulumi:"name"`
	// An organization name. The organization that owns the resource.
	Org *string `pulumi:"org"`
	// An organization ID. Identifies the organization that owns the resource.
	OrgId *string `pulumi:"orgId"`
	// A resource type. Identifies the API resource's type (or kind).
	Type string `pulumi:"type"`
}

// AuthorizationPermissionResourceInput is an input type that accepts AuthorizationPermissionResourceArgs and AuthorizationPermissionResourceOutput values.
// You can construct a concrete instance of `AuthorizationPermissionResourceInput` via:
//
//	AuthorizationPermissionResourceArgs{...}
type AuthorizationPermissionResourceInput interface {
	pulumi.Input

	ToAuthorizationPermissionResourceOutput() AuthorizationPermissionResourceOutput
	ToAuthorizationPermissionResourceOutputWithContext(context.Context) AuthorizationPermissionResourceOutput
}

type AuthorizationPermissionResourceArgs struct {
	// A resource ID. Identifies a specific resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource. **Note:** not all resource types have a name property.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// An organization name. The organization that owns the resource.
	Org pulumi.StringPtrInput `pulumi:"org"`
	// An organization ID. Identifies the organization that owns the resource.
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// A resource type. Identifies the API resource's type (or kind).
	Type pulumi.StringInput `pulumi:"type"`
}

func (AuthorizationPermissionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPermissionResource)(nil)).Elem()
}

func (i AuthorizationPermissionResourceArgs) ToAuthorizationPermissionResourceOutput() AuthorizationPermissionResourceOutput {
	return i.ToAuthorizationPermissionResourceOutputWithContext(context.Background())
}

func (i AuthorizationPermissionResourceArgs) ToAuthorizationPermissionResourceOutputWithContext(ctx context.Context) AuthorizationPermissionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPermissionResourceOutput)
}

type AuthorizationPermissionResourceOutput struct{ *pulumi.OutputState }

func (AuthorizationPermissionResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPermissionResource)(nil)).Elem()
}

func (o AuthorizationPermissionResourceOutput) ToAuthorizationPermissionResourceOutput() AuthorizationPermissionResourceOutput {
	return o
}

func (o AuthorizationPermissionResourceOutput) ToAuthorizationPermissionResourceOutputWithContext(ctx context.Context) AuthorizationPermissionResourceOutput {
	return o
}

// A resource ID. Identifies a specific resource.
func (o AuthorizationPermissionResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPermissionResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource. **Note:** not all resource types have a name property.
func (o AuthorizationPermissionResourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPermissionResource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// An organization name. The organization that owns the resource.
func (o AuthorizationPermissionResourceOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPermissionResource) *string { return v.Org }).(pulumi.StringPtrOutput)
}

// An organization ID. Identifies the organization that owns the resource.
func (o AuthorizationPermissionResourceOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPermissionResource) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// A resource type. Identifies the API resource's type (or kind).
func (o AuthorizationPermissionResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationPermissionResource) string { return v.Type }).(pulumi.StringOutput)
}

type TaskLabel struct {
	// The label ID.
	Id *string `pulumi:"id"`
	// The label name.
	Name *string `pulumi:"name"`
	// The organization ID.
	OrgId *string `pulumi:"orgId"`
	// The key-value pairs associated with this label.
	Properties map[string]string `pulumi:"properties"`
}

// TaskLabelInput is an input type that accepts TaskLabelArgs and TaskLabelOutput values.
// You can construct a concrete instance of `TaskLabelInput` via:
//
//	TaskLabelArgs{...}
type TaskLabelInput interface {
	pulumi.Input

	ToTaskLabelOutput() TaskLabelOutput
	ToTaskLabelOutputWithContext(context.Context) TaskLabelOutput
}

type TaskLabelArgs struct {
	// The label ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The label name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The organization ID.
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// The key-value pairs associated with this label.
	Properties pulumi.StringMapInput `pulumi:"properties"`
}

func (TaskLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskLabel)(nil)).Elem()
}

func (i TaskLabelArgs) ToTaskLabelOutput() TaskLabelOutput {
	return i.ToTaskLabelOutputWithContext(context.Background())
}

func (i TaskLabelArgs) ToTaskLabelOutputWithContext(ctx context.Context) TaskLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskLabelOutput)
}

// TaskLabelArrayInput is an input type that accepts TaskLabelArray and TaskLabelArrayOutput values.
// You can construct a concrete instance of `TaskLabelArrayInput` via:
//
//	TaskLabelArray{ TaskLabelArgs{...} }
type TaskLabelArrayInput interface {
	pulumi.Input

	ToTaskLabelArrayOutput() TaskLabelArrayOutput
	ToTaskLabelArrayOutputWithContext(context.Context) TaskLabelArrayOutput
}

type TaskLabelArray []TaskLabelInput

func (TaskLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskLabel)(nil)).Elem()
}

func (i TaskLabelArray) ToTaskLabelArrayOutput() TaskLabelArrayOutput {
	return i.ToTaskLabelArrayOutputWithContext(context.Background())
}

func (i TaskLabelArray) ToTaskLabelArrayOutputWithContext(ctx context.Context) TaskLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskLabelArrayOutput)
}

type TaskLabelOutput struct{ *pulumi.OutputState }

func (TaskLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskLabel)(nil)).Elem()
}

func (o TaskLabelOutput) ToTaskLabelOutput() TaskLabelOutput {
	return o
}

func (o TaskLabelOutput) ToTaskLabelOutputWithContext(ctx context.Context) TaskLabelOutput {
	return o
}

// The label ID.
func (o TaskLabelOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskLabel) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The label name.
func (o TaskLabelOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskLabel) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The organization ID.
func (o TaskLabelOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskLabel) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// The key-value pairs associated with this label.
func (o TaskLabelOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v TaskLabel) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type TaskLabelArrayOutput struct{ *pulumi.OutputState }

func (TaskLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskLabel)(nil)).Elem()
}

func (o TaskLabelArrayOutput) ToTaskLabelArrayOutput() TaskLabelArrayOutput {
	return o
}

func (o TaskLabelArrayOutput) ToTaskLabelArrayOutputWithContext(ctx context.Context) TaskLabelArrayOutput {
	return o
}

func (o TaskLabelArrayOutput) Index(i pulumi.IntInput) TaskLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskLabel {
		return vs[0].([]TaskLabel)[vs[1].(int)]
	}).(TaskLabelOutput)
}

type TaskLinks struct {
	// URI of resource.
	Labels *string `pulumi:"labels"`
	// URI of resource.
	Logs *string `pulumi:"logs"`
	// URI of resource.
	Members *string `pulumi:"members"`
	// URI of resource.
	Owners *string `pulumi:"owners"`
	// URI of resource.
	Runs *string `pulumi:"runs"`
	// URI of resource.
	Self *string `pulumi:"self"`
}

// TaskLinksInput is an input type that accepts TaskLinksArgs and TaskLinksOutput values.
// You can construct a concrete instance of `TaskLinksInput` via:
//
//	TaskLinksArgs{...}
type TaskLinksInput interface {
	pulumi.Input

	ToTaskLinksOutput() TaskLinksOutput
	ToTaskLinksOutputWithContext(context.Context) TaskLinksOutput
}

type TaskLinksArgs struct {
	// URI of resource.
	Labels pulumi.StringPtrInput `pulumi:"labels"`
	// URI of resource.
	Logs pulumi.StringPtrInput `pulumi:"logs"`
	// URI of resource.
	Members pulumi.StringPtrInput `pulumi:"members"`
	// URI of resource.
	Owners pulumi.StringPtrInput `pulumi:"owners"`
	// URI of resource.
	Runs pulumi.StringPtrInput `pulumi:"runs"`
	// URI of resource.
	Self pulumi.StringPtrInput `pulumi:"self"`
}

func (TaskLinksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskLinks)(nil)).Elem()
}

func (i TaskLinksArgs) ToTaskLinksOutput() TaskLinksOutput {
	return i.ToTaskLinksOutputWithContext(context.Background())
}

func (i TaskLinksArgs) ToTaskLinksOutputWithContext(ctx context.Context) TaskLinksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskLinksOutput)
}

func (i TaskLinksArgs) ToTaskLinksPtrOutput() TaskLinksPtrOutput {
	return i.ToTaskLinksPtrOutputWithContext(context.Background())
}

func (i TaskLinksArgs) ToTaskLinksPtrOutputWithContext(ctx context.Context) TaskLinksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskLinksOutput).ToTaskLinksPtrOutputWithContext(ctx)
}

// TaskLinksPtrInput is an input type that accepts TaskLinksArgs, TaskLinksPtr and TaskLinksPtrOutput values.
// You can construct a concrete instance of `TaskLinksPtrInput` via:
//
//	        TaskLinksArgs{...}
//
//	or:
//
//	        nil
type TaskLinksPtrInput interface {
	pulumi.Input

	ToTaskLinksPtrOutput() TaskLinksPtrOutput
	ToTaskLinksPtrOutputWithContext(context.Context) TaskLinksPtrOutput
}

type taskLinksPtrType TaskLinksArgs

func TaskLinksPtr(v *TaskLinksArgs) TaskLinksPtrInput {
	return (*taskLinksPtrType)(v)
}

func (*taskLinksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskLinks)(nil)).Elem()
}

func (i *taskLinksPtrType) ToTaskLinksPtrOutput() TaskLinksPtrOutput {
	return i.ToTaskLinksPtrOutputWithContext(context.Background())
}

func (i *taskLinksPtrType) ToTaskLinksPtrOutputWithContext(ctx context.Context) TaskLinksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskLinksPtrOutput)
}

type TaskLinksOutput struct{ *pulumi.OutputState }

func (TaskLinksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskLinks)(nil)).Elem()
}

func (o TaskLinksOutput) ToTaskLinksOutput() TaskLinksOutput {
	return o
}

func (o TaskLinksOutput) ToTaskLinksOutputWithContext(ctx context.Context) TaskLinksOutput {
	return o
}

func (o TaskLinksOutput) ToTaskLinksPtrOutput() TaskLinksPtrOutput {
	return o.ToTaskLinksPtrOutputWithContext(context.Background())
}

func (o TaskLinksOutput) ToTaskLinksPtrOutputWithContext(ctx context.Context) TaskLinksPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskLinks) *TaskLinks {
		return &v
	}).(TaskLinksPtrOutput)
}

// URI of resource.
func (o TaskLinksOutput) Labels() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskLinks) *string { return v.Labels }).(pulumi.StringPtrOutput)
}

// URI of resource.
func (o TaskLinksOutput) Logs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskLinks) *string { return v.Logs }).(pulumi.StringPtrOutput)
}

// URI of resource.
func (o TaskLinksOutput) Members() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskLinks) *string { return v.Members }).(pulumi.StringPtrOutput)
}

// URI of resource.
func (o TaskLinksOutput) Owners() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskLinks) *string { return v.Owners }).(pulumi.StringPtrOutput)
}

// URI of resource.
func (o TaskLinksOutput) Runs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskLinks) *string { return v.Runs }).(pulumi.StringPtrOutput)
}

// URI of resource.
func (o TaskLinksOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskLinks) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type TaskLinksPtrOutput struct{ *pulumi.OutputState }

func (TaskLinksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskLinks)(nil)).Elem()
}

func (o TaskLinksPtrOutput) ToTaskLinksPtrOutput() TaskLinksPtrOutput {
	return o
}

func (o TaskLinksPtrOutput) ToTaskLinksPtrOutputWithContext(ctx context.Context) TaskLinksPtrOutput {
	return o
}

func (o TaskLinksPtrOutput) Elem() TaskLinksOutput {
	return o.ApplyT(func(v *TaskLinks) TaskLinks {
		if v != nil {
			return *v
		}
		var ret TaskLinks
		return ret
	}).(TaskLinksOutput)
}

// URI of resource.
func (o TaskLinksPtrOutput) Labels() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskLinks) *string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringPtrOutput)
}

// URI of resource.
func (o TaskLinksPtrOutput) Logs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskLinks) *string {
		if v == nil {
			return nil
		}
		return v.Logs
	}).(pulumi.StringPtrOutput)
}

// URI of resource.
func (o TaskLinksPtrOutput) Members() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskLinks) *string {
		if v == nil {
			return nil
		}
		return v.Members
	}).(pulumi.StringPtrOutput)
}

// URI of resource.
func (o TaskLinksPtrOutput) Owners() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskLinks) *string {
		if v == nil {
			return nil
		}
		return v.Owners
	}).(pulumi.StringPtrOutput)
}

// URI of resource.
func (o TaskLinksPtrOutput) Runs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskLinks) *string {
		if v == nil {
			return nil
		}
		return v.Runs
	}).(pulumi.StringPtrOutput)
}

// URI of resource.
func (o TaskLinksPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskLinks) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

type GetAuthorizationPermission struct {
	// Permission action.
	Action   string                             `pulumi:"action"`
	Resource GetAuthorizationPermissionResource `pulumi:"resource"`
}

// GetAuthorizationPermissionInput is an input type that accepts GetAuthorizationPermissionArgs and GetAuthorizationPermissionOutput values.
// You can construct a concrete instance of `GetAuthorizationPermissionInput` via:
//
//	GetAuthorizationPermissionArgs{...}
type GetAuthorizationPermissionInput interface {
	pulumi.Input

	ToGetAuthorizationPermissionOutput() GetAuthorizationPermissionOutput
	ToGetAuthorizationPermissionOutputWithContext(context.Context) GetAuthorizationPermissionOutput
}

type GetAuthorizationPermissionArgs struct {
	// Permission action.
	Action   pulumi.StringInput                      `pulumi:"action"`
	Resource GetAuthorizationPermissionResourceInput `pulumi:"resource"`
}

func (GetAuthorizationPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationPermission)(nil)).Elem()
}

func (i GetAuthorizationPermissionArgs) ToGetAuthorizationPermissionOutput() GetAuthorizationPermissionOutput {
	return i.ToGetAuthorizationPermissionOutputWithContext(context.Background())
}

func (i GetAuthorizationPermissionArgs) ToGetAuthorizationPermissionOutputWithContext(ctx context.Context) GetAuthorizationPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorizationPermissionOutput)
}

// GetAuthorizationPermissionArrayInput is an input type that accepts GetAuthorizationPermissionArray and GetAuthorizationPermissionArrayOutput values.
// You can construct a concrete instance of `GetAuthorizationPermissionArrayInput` via:
//
//	GetAuthorizationPermissionArray{ GetAuthorizationPermissionArgs{...} }
type GetAuthorizationPermissionArrayInput interface {
	pulumi.Input

	ToGetAuthorizationPermissionArrayOutput() GetAuthorizationPermissionArrayOutput
	ToGetAuthorizationPermissionArrayOutputWithContext(context.Context) GetAuthorizationPermissionArrayOutput
}

type GetAuthorizationPermissionArray []GetAuthorizationPermissionInput

func (GetAuthorizationPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorizationPermission)(nil)).Elem()
}

func (i GetAuthorizationPermissionArray) ToGetAuthorizationPermissionArrayOutput() GetAuthorizationPermissionArrayOutput {
	return i.ToGetAuthorizationPermissionArrayOutputWithContext(context.Background())
}

func (i GetAuthorizationPermissionArray) ToGetAuthorizationPermissionArrayOutputWithContext(ctx context.Context) GetAuthorizationPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorizationPermissionArrayOutput)
}

type GetAuthorizationPermissionOutput struct{ *pulumi.OutputState }

func (GetAuthorizationPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationPermission)(nil)).Elem()
}

func (o GetAuthorizationPermissionOutput) ToGetAuthorizationPermissionOutput() GetAuthorizationPermissionOutput {
	return o
}

func (o GetAuthorizationPermissionOutput) ToGetAuthorizationPermissionOutputWithContext(ctx context.Context) GetAuthorizationPermissionOutput {
	return o
}

// Permission action.
func (o GetAuthorizationPermissionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationPermission) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetAuthorizationPermissionOutput) Resource() GetAuthorizationPermissionResourceOutput {
	return o.ApplyT(func(v GetAuthorizationPermission) GetAuthorizationPermissionResource { return v.Resource }).(GetAuthorizationPermissionResourceOutput)
}

type GetAuthorizationPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetAuthorizationPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorizationPermission)(nil)).Elem()
}

func (o GetAuthorizationPermissionArrayOutput) ToGetAuthorizationPermissionArrayOutput() GetAuthorizationPermissionArrayOutput {
	return o
}

func (o GetAuthorizationPermissionArrayOutput) ToGetAuthorizationPermissionArrayOutputWithContext(ctx context.Context) GetAuthorizationPermissionArrayOutput {
	return o
}

func (o GetAuthorizationPermissionArrayOutput) Index(i pulumi.IntInput) GetAuthorizationPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthorizationPermission {
		return vs[0].([]GetAuthorizationPermission)[vs[1].(int)]
	}).(GetAuthorizationPermissionOutput)
}

type GetAuthorizationPermissionResource struct {
	// A resource ID. Identifies a specific resource.
	Id string `pulumi:"id"`
	// The name of the resource. **Note:** not all resource types have a name property.
	Name string `pulumi:"name"`
	// An organization name. The organization that owns the resource.
	Org string `pulumi:"org"`
	// An organization ID. Identifies the organization that owns the resource.
	OrgId string `pulumi:"orgId"`
	// A resource type. Identifies the API resource's type (or kind).
	Type string `pulumi:"type"`
}

// GetAuthorizationPermissionResourceInput is an input type that accepts GetAuthorizationPermissionResourceArgs and GetAuthorizationPermissionResourceOutput values.
// You can construct a concrete instance of `GetAuthorizationPermissionResourceInput` via:
//
//	GetAuthorizationPermissionResourceArgs{...}
type GetAuthorizationPermissionResourceInput interface {
	pulumi.Input

	ToGetAuthorizationPermissionResourceOutput() GetAuthorizationPermissionResourceOutput
	ToGetAuthorizationPermissionResourceOutputWithContext(context.Context) GetAuthorizationPermissionResourceOutput
}

type GetAuthorizationPermissionResourceArgs struct {
	// A resource ID. Identifies a specific resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the resource. **Note:** not all resource types have a name property.
	Name pulumi.StringInput `pulumi:"name"`
	// An organization name. The organization that owns the resource.
	Org pulumi.StringInput `pulumi:"org"`
	// An organization ID. Identifies the organization that owns the resource.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// A resource type. Identifies the API resource's type (or kind).
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetAuthorizationPermissionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationPermissionResource)(nil)).Elem()
}

func (i GetAuthorizationPermissionResourceArgs) ToGetAuthorizationPermissionResourceOutput() GetAuthorizationPermissionResourceOutput {
	return i.ToGetAuthorizationPermissionResourceOutputWithContext(context.Background())
}

func (i GetAuthorizationPermissionResourceArgs) ToGetAuthorizationPermissionResourceOutputWithContext(ctx context.Context) GetAuthorizationPermissionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorizationPermissionResourceOutput)
}

type GetAuthorizationPermissionResourceOutput struct{ *pulumi.OutputState }

func (GetAuthorizationPermissionResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationPermissionResource)(nil)).Elem()
}

func (o GetAuthorizationPermissionResourceOutput) ToGetAuthorizationPermissionResourceOutput() GetAuthorizationPermissionResourceOutput {
	return o
}

func (o GetAuthorizationPermissionResourceOutput) ToGetAuthorizationPermissionResourceOutputWithContext(ctx context.Context) GetAuthorizationPermissionResourceOutput {
	return o
}

// A resource ID. Identifies a specific resource.
func (o GetAuthorizationPermissionResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationPermissionResource) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource. **Note:** not all resource types have a name property.
func (o GetAuthorizationPermissionResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationPermissionResource) string { return v.Name }).(pulumi.StringOutput)
}

// An organization name. The organization that owns the resource.
func (o GetAuthorizationPermissionResourceOutput) Org() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationPermissionResource) string { return v.Org }).(pulumi.StringOutput)
}

// An organization ID. Identifies the organization that owns the resource.
func (o GetAuthorizationPermissionResourceOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationPermissionResource) string { return v.OrgId }).(pulumi.StringOutput)
}

// A resource type. Identifies the API resource's type (or kind).
func (o GetAuthorizationPermissionResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationPermissionResource) string { return v.Type }).(pulumi.StringOutput)
}

type GetAuthorizationsAuthorization struct {
	// Authorizations creation date.
	CreatedAt string `pulumi:"createdAt"`
	// A description of the token.
	Description string `pulumi:"description"`
	// The authorization ID.
	Id string `pulumi:"id"`
	// An Organization name. Specifies the organization that owns the authorization.
	Org string `pulumi:"org"`
	// An organization ID. Specifies the organization that owns the authorization.
	OrgId string `pulumi:"orgId"`
	// A list of permissions for an authorization.
	Permissions []GetAuthorizationsAuthorizationPermission `pulumi:"permissions"`
	// Status of the token.
	Status string `pulumi:"status"`
	// The API token.
	Token string `pulumi:"token"`
	// Last Authorizations update date.
	UpdatedAt string `pulumi:"updatedAt"`
	// A user name. Specifies the user that the authorization is scoped to.
	User string `pulumi:"user"`
	// A user ID. Specifies the user that the authorization is scoped to.
	UserId string `pulumi:"userId"`
}

// GetAuthorizationsAuthorizationInput is an input type that accepts GetAuthorizationsAuthorizationArgs and GetAuthorizationsAuthorizationOutput values.
// You can construct a concrete instance of `GetAuthorizationsAuthorizationInput` via:
//
//	GetAuthorizationsAuthorizationArgs{...}
type GetAuthorizationsAuthorizationInput interface {
	pulumi.Input

	ToGetAuthorizationsAuthorizationOutput() GetAuthorizationsAuthorizationOutput
	ToGetAuthorizationsAuthorizationOutputWithContext(context.Context) GetAuthorizationsAuthorizationOutput
}

type GetAuthorizationsAuthorizationArgs struct {
	// Authorizations creation date.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// A description of the token.
	Description pulumi.StringInput `pulumi:"description"`
	// The authorization ID.
	Id pulumi.StringInput `pulumi:"id"`
	// An Organization name. Specifies the organization that owns the authorization.
	Org pulumi.StringInput `pulumi:"org"`
	// An organization ID. Specifies the organization that owns the authorization.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// A list of permissions for an authorization.
	Permissions GetAuthorizationsAuthorizationPermissionArrayInput `pulumi:"permissions"`
	// Status of the token.
	Status pulumi.StringInput `pulumi:"status"`
	// The API token.
	Token pulumi.StringInput `pulumi:"token"`
	// Last Authorizations update date.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// A user name. Specifies the user that the authorization is scoped to.
	User pulumi.StringInput `pulumi:"user"`
	// A user ID. Specifies the user that the authorization is scoped to.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetAuthorizationsAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationsAuthorization)(nil)).Elem()
}

func (i GetAuthorizationsAuthorizationArgs) ToGetAuthorizationsAuthorizationOutput() GetAuthorizationsAuthorizationOutput {
	return i.ToGetAuthorizationsAuthorizationOutputWithContext(context.Background())
}

func (i GetAuthorizationsAuthorizationArgs) ToGetAuthorizationsAuthorizationOutputWithContext(ctx context.Context) GetAuthorizationsAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorizationsAuthorizationOutput)
}

// GetAuthorizationsAuthorizationArrayInput is an input type that accepts GetAuthorizationsAuthorizationArray and GetAuthorizationsAuthorizationArrayOutput values.
// You can construct a concrete instance of `GetAuthorizationsAuthorizationArrayInput` via:
//
//	GetAuthorizationsAuthorizationArray{ GetAuthorizationsAuthorizationArgs{...} }
type GetAuthorizationsAuthorizationArrayInput interface {
	pulumi.Input

	ToGetAuthorizationsAuthorizationArrayOutput() GetAuthorizationsAuthorizationArrayOutput
	ToGetAuthorizationsAuthorizationArrayOutputWithContext(context.Context) GetAuthorizationsAuthorizationArrayOutput
}

type GetAuthorizationsAuthorizationArray []GetAuthorizationsAuthorizationInput

func (GetAuthorizationsAuthorizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorizationsAuthorization)(nil)).Elem()
}

func (i GetAuthorizationsAuthorizationArray) ToGetAuthorizationsAuthorizationArrayOutput() GetAuthorizationsAuthorizationArrayOutput {
	return i.ToGetAuthorizationsAuthorizationArrayOutputWithContext(context.Background())
}

func (i GetAuthorizationsAuthorizationArray) ToGetAuthorizationsAuthorizationArrayOutputWithContext(ctx context.Context) GetAuthorizationsAuthorizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorizationsAuthorizationArrayOutput)
}

type GetAuthorizationsAuthorizationOutput struct{ *pulumi.OutputState }

func (GetAuthorizationsAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationsAuthorization)(nil)).Elem()
}

func (o GetAuthorizationsAuthorizationOutput) ToGetAuthorizationsAuthorizationOutput() GetAuthorizationsAuthorizationOutput {
	return o
}

func (o GetAuthorizationsAuthorizationOutput) ToGetAuthorizationsAuthorizationOutputWithContext(ctx context.Context) GetAuthorizationsAuthorizationOutput {
	return o
}

// Authorizations creation date.
func (o GetAuthorizationsAuthorizationOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorization) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// A description of the token.
func (o GetAuthorizationsAuthorizationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorization) string { return v.Description }).(pulumi.StringOutput)
}

// The authorization ID.
func (o GetAuthorizationsAuthorizationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorization) string { return v.Id }).(pulumi.StringOutput)
}

// An Organization name. Specifies the organization that owns the authorization.
func (o GetAuthorizationsAuthorizationOutput) Org() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorization) string { return v.Org }).(pulumi.StringOutput)
}

// An organization ID. Specifies the organization that owns the authorization.
func (o GetAuthorizationsAuthorizationOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorization) string { return v.OrgId }).(pulumi.StringOutput)
}

// A list of permissions for an authorization.
func (o GetAuthorizationsAuthorizationOutput) Permissions() GetAuthorizationsAuthorizationPermissionArrayOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorization) []GetAuthorizationsAuthorizationPermission {
		return v.Permissions
	}).(GetAuthorizationsAuthorizationPermissionArrayOutput)
}

// Status of the token.
func (o GetAuthorizationsAuthorizationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorization) string { return v.Status }).(pulumi.StringOutput)
}

// The API token.
func (o GetAuthorizationsAuthorizationOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorization) string { return v.Token }).(pulumi.StringOutput)
}

// Last Authorizations update date.
func (o GetAuthorizationsAuthorizationOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorization) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// A user name. Specifies the user that the authorization is scoped to.
func (o GetAuthorizationsAuthorizationOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorization) string { return v.User }).(pulumi.StringOutput)
}

// A user ID. Specifies the user that the authorization is scoped to.
func (o GetAuthorizationsAuthorizationOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorization) string { return v.UserId }).(pulumi.StringOutput)
}

type GetAuthorizationsAuthorizationArrayOutput struct{ *pulumi.OutputState }

func (GetAuthorizationsAuthorizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorizationsAuthorization)(nil)).Elem()
}

func (o GetAuthorizationsAuthorizationArrayOutput) ToGetAuthorizationsAuthorizationArrayOutput() GetAuthorizationsAuthorizationArrayOutput {
	return o
}

func (o GetAuthorizationsAuthorizationArrayOutput) ToGetAuthorizationsAuthorizationArrayOutputWithContext(ctx context.Context) GetAuthorizationsAuthorizationArrayOutput {
	return o
}

func (o GetAuthorizationsAuthorizationArrayOutput) Index(i pulumi.IntInput) GetAuthorizationsAuthorizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthorizationsAuthorization {
		return vs[0].([]GetAuthorizationsAuthorization)[vs[1].(int)]
	}).(GetAuthorizationsAuthorizationOutput)
}

type GetAuthorizationsAuthorizationPermission struct {
	// Permission action.
	Action   string                                           `pulumi:"action"`
	Resource GetAuthorizationsAuthorizationPermissionResource `pulumi:"resource"`
}

// GetAuthorizationsAuthorizationPermissionInput is an input type that accepts GetAuthorizationsAuthorizationPermissionArgs and GetAuthorizationsAuthorizationPermissionOutput values.
// You can construct a concrete instance of `GetAuthorizationsAuthorizationPermissionInput` via:
//
//	GetAuthorizationsAuthorizationPermissionArgs{...}
type GetAuthorizationsAuthorizationPermissionInput interface {
	pulumi.Input

	ToGetAuthorizationsAuthorizationPermissionOutput() GetAuthorizationsAuthorizationPermissionOutput
	ToGetAuthorizationsAuthorizationPermissionOutputWithContext(context.Context) GetAuthorizationsAuthorizationPermissionOutput
}

type GetAuthorizationsAuthorizationPermissionArgs struct {
	// Permission action.
	Action   pulumi.StringInput                                    `pulumi:"action"`
	Resource GetAuthorizationsAuthorizationPermissionResourceInput `pulumi:"resource"`
}

func (GetAuthorizationsAuthorizationPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationsAuthorizationPermission)(nil)).Elem()
}

func (i GetAuthorizationsAuthorizationPermissionArgs) ToGetAuthorizationsAuthorizationPermissionOutput() GetAuthorizationsAuthorizationPermissionOutput {
	return i.ToGetAuthorizationsAuthorizationPermissionOutputWithContext(context.Background())
}

func (i GetAuthorizationsAuthorizationPermissionArgs) ToGetAuthorizationsAuthorizationPermissionOutputWithContext(ctx context.Context) GetAuthorizationsAuthorizationPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorizationsAuthorizationPermissionOutput)
}

// GetAuthorizationsAuthorizationPermissionArrayInput is an input type that accepts GetAuthorizationsAuthorizationPermissionArray and GetAuthorizationsAuthorizationPermissionArrayOutput values.
// You can construct a concrete instance of `GetAuthorizationsAuthorizationPermissionArrayInput` via:
//
//	GetAuthorizationsAuthorizationPermissionArray{ GetAuthorizationsAuthorizationPermissionArgs{...} }
type GetAuthorizationsAuthorizationPermissionArrayInput interface {
	pulumi.Input

	ToGetAuthorizationsAuthorizationPermissionArrayOutput() GetAuthorizationsAuthorizationPermissionArrayOutput
	ToGetAuthorizationsAuthorizationPermissionArrayOutputWithContext(context.Context) GetAuthorizationsAuthorizationPermissionArrayOutput
}

type GetAuthorizationsAuthorizationPermissionArray []GetAuthorizationsAuthorizationPermissionInput

func (GetAuthorizationsAuthorizationPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorizationsAuthorizationPermission)(nil)).Elem()
}

func (i GetAuthorizationsAuthorizationPermissionArray) ToGetAuthorizationsAuthorizationPermissionArrayOutput() GetAuthorizationsAuthorizationPermissionArrayOutput {
	return i.ToGetAuthorizationsAuthorizationPermissionArrayOutputWithContext(context.Background())
}

func (i GetAuthorizationsAuthorizationPermissionArray) ToGetAuthorizationsAuthorizationPermissionArrayOutputWithContext(ctx context.Context) GetAuthorizationsAuthorizationPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorizationsAuthorizationPermissionArrayOutput)
}

type GetAuthorizationsAuthorizationPermissionOutput struct{ *pulumi.OutputState }

func (GetAuthorizationsAuthorizationPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationsAuthorizationPermission)(nil)).Elem()
}

func (o GetAuthorizationsAuthorizationPermissionOutput) ToGetAuthorizationsAuthorizationPermissionOutput() GetAuthorizationsAuthorizationPermissionOutput {
	return o
}

func (o GetAuthorizationsAuthorizationPermissionOutput) ToGetAuthorizationsAuthorizationPermissionOutputWithContext(ctx context.Context) GetAuthorizationsAuthorizationPermissionOutput {
	return o
}

// Permission action.
func (o GetAuthorizationsAuthorizationPermissionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorizationPermission) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetAuthorizationsAuthorizationPermissionOutput) Resource() GetAuthorizationsAuthorizationPermissionResourceOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorizationPermission) GetAuthorizationsAuthorizationPermissionResource {
		return v.Resource
	}).(GetAuthorizationsAuthorizationPermissionResourceOutput)
}

type GetAuthorizationsAuthorizationPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetAuthorizationsAuthorizationPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorizationsAuthorizationPermission)(nil)).Elem()
}

func (o GetAuthorizationsAuthorizationPermissionArrayOutput) ToGetAuthorizationsAuthorizationPermissionArrayOutput() GetAuthorizationsAuthorizationPermissionArrayOutput {
	return o
}

func (o GetAuthorizationsAuthorizationPermissionArrayOutput) ToGetAuthorizationsAuthorizationPermissionArrayOutputWithContext(ctx context.Context) GetAuthorizationsAuthorizationPermissionArrayOutput {
	return o
}

func (o GetAuthorizationsAuthorizationPermissionArrayOutput) Index(i pulumi.IntInput) GetAuthorizationsAuthorizationPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthorizationsAuthorizationPermission {
		return vs[0].([]GetAuthorizationsAuthorizationPermission)[vs[1].(int)]
	}).(GetAuthorizationsAuthorizationPermissionOutput)
}

type GetAuthorizationsAuthorizationPermissionResource struct {
	// A resource ID. Identifies a specific resource.
	Id string `pulumi:"id"`
	// The name of the resource. **Note:** not all resource types have a name property.
	Name string `pulumi:"name"`
	// An organization name. The organization that owns the resource.
	Org string `pulumi:"org"`
	// An organization ID. Identifies the organization that owns the resource.
	OrgId string `pulumi:"orgId"`
	// A resource type. Identifies the API resource's type (or kind).
	Type string `pulumi:"type"`
}

// GetAuthorizationsAuthorizationPermissionResourceInput is an input type that accepts GetAuthorizationsAuthorizationPermissionResourceArgs and GetAuthorizationsAuthorizationPermissionResourceOutput values.
// You can construct a concrete instance of `GetAuthorizationsAuthorizationPermissionResourceInput` via:
//
//	GetAuthorizationsAuthorizationPermissionResourceArgs{...}
type GetAuthorizationsAuthorizationPermissionResourceInput interface {
	pulumi.Input

	ToGetAuthorizationsAuthorizationPermissionResourceOutput() GetAuthorizationsAuthorizationPermissionResourceOutput
	ToGetAuthorizationsAuthorizationPermissionResourceOutputWithContext(context.Context) GetAuthorizationsAuthorizationPermissionResourceOutput
}

type GetAuthorizationsAuthorizationPermissionResourceArgs struct {
	// A resource ID. Identifies a specific resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the resource. **Note:** not all resource types have a name property.
	Name pulumi.StringInput `pulumi:"name"`
	// An organization name. The organization that owns the resource.
	Org pulumi.StringInput `pulumi:"org"`
	// An organization ID. Identifies the organization that owns the resource.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// A resource type. Identifies the API resource's type (or kind).
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetAuthorizationsAuthorizationPermissionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationsAuthorizationPermissionResource)(nil)).Elem()
}

func (i GetAuthorizationsAuthorizationPermissionResourceArgs) ToGetAuthorizationsAuthorizationPermissionResourceOutput() GetAuthorizationsAuthorizationPermissionResourceOutput {
	return i.ToGetAuthorizationsAuthorizationPermissionResourceOutputWithContext(context.Background())
}

func (i GetAuthorizationsAuthorizationPermissionResourceArgs) ToGetAuthorizationsAuthorizationPermissionResourceOutputWithContext(ctx context.Context) GetAuthorizationsAuthorizationPermissionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorizationsAuthorizationPermissionResourceOutput)
}

type GetAuthorizationsAuthorizationPermissionResourceOutput struct{ *pulumi.OutputState }

func (GetAuthorizationsAuthorizationPermissionResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationsAuthorizationPermissionResource)(nil)).Elem()
}

func (o GetAuthorizationsAuthorizationPermissionResourceOutput) ToGetAuthorizationsAuthorizationPermissionResourceOutput() GetAuthorizationsAuthorizationPermissionResourceOutput {
	return o
}

func (o GetAuthorizationsAuthorizationPermissionResourceOutput) ToGetAuthorizationsAuthorizationPermissionResourceOutputWithContext(ctx context.Context) GetAuthorizationsAuthorizationPermissionResourceOutput {
	return o
}

// A resource ID. Identifies a specific resource.
func (o GetAuthorizationsAuthorizationPermissionResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorizationPermissionResource) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource. **Note:** not all resource types have a name property.
func (o GetAuthorizationsAuthorizationPermissionResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorizationPermissionResource) string { return v.Name }).(pulumi.StringOutput)
}

// An organization name. The organization that owns the resource.
func (o GetAuthorizationsAuthorizationPermissionResourceOutput) Org() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorizationPermissionResource) string { return v.Org }).(pulumi.StringOutput)
}

// An organization ID. Identifies the organization that owns the resource.
func (o GetAuthorizationsAuthorizationPermissionResourceOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorizationPermissionResource) string { return v.OrgId }).(pulumi.StringOutput)
}

// A resource type. Identifies the API resource's type (or kind).
func (o GetAuthorizationsAuthorizationPermissionResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorizationPermissionResource) string { return v.Type }).(pulumi.StringOutput)
}

type GetBucketsBucket struct {
	// Bucket creation date.
	CreatedAt string `pulumi:"createdAt"`
	// A description of the bucket.
	Description string `pulumi:"description"`
	// A Bucket ID.
	Id string `pulumi:"id"`
	// A Bucket name.
	Name string `pulumi:"name"`
	// An organization ID.
	OrgId string `pulumi:"orgId"`
	// The duration in seconds for how long data will be kept in the database. `0` represents infinite retention.
	RetentionPeriod int `pulumi:"retentionPeriod"`
	// The Bucket type.
	Type string `pulumi:"type"`
	// Last bucket update date.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetBucketsBucketInput is an input type that accepts GetBucketsBucketArgs and GetBucketsBucketOutput values.
// You can construct a concrete instance of `GetBucketsBucketInput` via:
//
//	GetBucketsBucketArgs{...}
type GetBucketsBucketInput interface {
	pulumi.Input

	ToGetBucketsBucketOutput() GetBucketsBucketOutput
	ToGetBucketsBucketOutputWithContext(context.Context) GetBucketsBucketOutput
}

type GetBucketsBucketArgs struct {
	// Bucket creation date.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// A description of the bucket.
	Description pulumi.StringInput `pulumi:"description"`
	// A Bucket ID.
	Id pulumi.StringInput `pulumi:"id"`
	// A Bucket name.
	Name pulumi.StringInput `pulumi:"name"`
	// An organization ID.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// The duration in seconds for how long data will be kept in the database. `0` represents infinite retention.
	RetentionPeriod pulumi.IntInput `pulumi:"retentionPeriod"`
	// The Bucket type.
	Type pulumi.StringInput `pulumi:"type"`
	// Last bucket update date.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetBucketsBucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketsBucket)(nil)).Elem()
}

func (i GetBucketsBucketArgs) ToGetBucketsBucketOutput() GetBucketsBucketOutput {
	return i.ToGetBucketsBucketOutputWithContext(context.Background())
}

func (i GetBucketsBucketArgs) ToGetBucketsBucketOutputWithContext(ctx context.Context) GetBucketsBucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketsBucketOutput)
}

// GetBucketsBucketArrayInput is an input type that accepts GetBucketsBucketArray and GetBucketsBucketArrayOutput values.
// You can construct a concrete instance of `GetBucketsBucketArrayInput` via:
//
//	GetBucketsBucketArray{ GetBucketsBucketArgs{...} }
type GetBucketsBucketArrayInput interface {
	pulumi.Input

	ToGetBucketsBucketArrayOutput() GetBucketsBucketArrayOutput
	ToGetBucketsBucketArrayOutputWithContext(context.Context) GetBucketsBucketArrayOutput
}

type GetBucketsBucketArray []GetBucketsBucketInput

func (GetBucketsBucketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBucketsBucket)(nil)).Elem()
}

func (i GetBucketsBucketArray) ToGetBucketsBucketArrayOutput() GetBucketsBucketArrayOutput {
	return i.ToGetBucketsBucketArrayOutputWithContext(context.Background())
}

func (i GetBucketsBucketArray) ToGetBucketsBucketArrayOutputWithContext(ctx context.Context) GetBucketsBucketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketsBucketArrayOutput)
}

type GetBucketsBucketOutput struct{ *pulumi.OutputState }

func (GetBucketsBucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketsBucket)(nil)).Elem()
}

func (o GetBucketsBucketOutput) ToGetBucketsBucketOutput() GetBucketsBucketOutput {
	return o
}

func (o GetBucketsBucketOutput) ToGetBucketsBucketOutputWithContext(ctx context.Context) GetBucketsBucketOutput {
	return o
}

// Bucket creation date.
func (o GetBucketsBucketOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketsBucket) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// A description of the bucket.
func (o GetBucketsBucketOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketsBucket) string { return v.Description }).(pulumi.StringOutput)
}

// A Bucket ID.
func (o GetBucketsBucketOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketsBucket) string { return v.Id }).(pulumi.StringOutput)
}

// A Bucket name.
func (o GetBucketsBucketOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketsBucket) string { return v.Name }).(pulumi.StringOutput)
}

// An organization ID.
func (o GetBucketsBucketOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketsBucket) string { return v.OrgId }).(pulumi.StringOutput)
}

// The duration in seconds for how long data will be kept in the database. `0` represents infinite retention.
func (o GetBucketsBucketOutput) RetentionPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v GetBucketsBucket) int { return v.RetentionPeriod }).(pulumi.IntOutput)
}

// The Bucket type.
func (o GetBucketsBucketOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketsBucket) string { return v.Type }).(pulumi.StringOutput)
}

// Last bucket update date.
func (o GetBucketsBucketOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketsBucket) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetBucketsBucketArrayOutput struct{ *pulumi.OutputState }

func (GetBucketsBucketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBucketsBucket)(nil)).Elem()
}

func (o GetBucketsBucketArrayOutput) ToGetBucketsBucketArrayOutput() GetBucketsBucketArrayOutput {
	return o
}

func (o GetBucketsBucketArrayOutput) ToGetBucketsBucketArrayOutputWithContext(ctx context.Context) GetBucketsBucketArrayOutput {
	return o
}

func (o GetBucketsBucketArrayOutput) Index(i pulumi.IntInput) GetBucketsBucketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBucketsBucket {
		return vs[0].([]GetBucketsBucket)[vs[1].(int)]
	}).(GetBucketsBucketOutput)
}

type GetLabelsLabel struct {
	// The label ID.
	Id string `pulumi:"id"`
	// The label name.
	Name string `pulumi:"name"`
	// The organization ID.
	OrgId string `pulumi:"orgId"`
	// The key-value pairs associated with this label.
	Properties map[string]string `pulumi:"properties"`
}

// GetLabelsLabelInput is an input type that accepts GetLabelsLabelArgs and GetLabelsLabelOutput values.
// You can construct a concrete instance of `GetLabelsLabelInput` via:
//
//	GetLabelsLabelArgs{...}
type GetLabelsLabelInput interface {
	pulumi.Input

	ToGetLabelsLabelOutput() GetLabelsLabelOutput
	ToGetLabelsLabelOutputWithContext(context.Context) GetLabelsLabelOutput
}

type GetLabelsLabelArgs struct {
	// The label ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The label name.
	Name pulumi.StringInput `pulumi:"name"`
	// The organization ID.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// The key-value pairs associated with this label.
	Properties pulumi.StringMapInput `pulumi:"properties"`
}

func (GetLabelsLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLabelsLabel)(nil)).Elem()
}

func (i GetLabelsLabelArgs) ToGetLabelsLabelOutput() GetLabelsLabelOutput {
	return i.ToGetLabelsLabelOutputWithContext(context.Background())
}

func (i GetLabelsLabelArgs) ToGetLabelsLabelOutputWithContext(ctx context.Context) GetLabelsLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLabelsLabelOutput)
}

// GetLabelsLabelArrayInput is an input type that accepts GetLabelsLabelArray and GetLabelsLabelArrayOutput values.
// You can construct a concrete instance of `GetLabelsLabelArrayInput` via:
//
//	GetLabelsLabelArray{ GetLabelsLabelArgs{...} }
type GetLabelsLabelArrayInput interface {
	pulumi.Input

	ToGetLabelsLabelArrayOutput() GetLabelsLabelArrayOutput
	ToGetLabelsLabelArrayOutputWithContext(context.Context) GetLabelsLabelArrayOutput
}

type GetLabelsLabelArray []GetLabelsLabelInput

func (GetLabelsLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLabelsLabel)(nil)).Elem()
}

func (i GetLabelsLabelArray) ToGetLabelsLabelArrayOutput() GetLabelsLabelArrayOutput {
	return i.ToGetLabelsLabelArrayOutputWithContext(context.Background())
}

func (i GetLabelsLabelArray) ToGetLabelsLabelArrayOutputWithContext(ctx context.Context) GetLabelsLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLabelsLabelArrayOutput)
}

type GetLabelsLabelOutput struct{ *pulumi.OutputState }

func (GetLabelsLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLabelsLabel)(nil)).Elem()
}

func (o GetLabelsLabelOutput) ToGetLabelsLabelOutput() GetLabelsLabelOutput {
	return o
}

func (o GetLabelsLabelOutput) ToGetLabelsLabelOutputWithContext(ctx context.Context) GetLabelsLabelOutput {
	return o
}

// The label ID.
func (o GetLabelsLabelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLabelsLabel) string { return v.Id }).(pulumi.StringOutput)
}

// The label name.
func (o GetLabelsLabelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLabelsLabel) string { return v.Name }).(pulumi.StringOutput)
}

// The organization ID.
func (o GetLabelsLabelOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLabelsLabel) string { return v.OrgId }).(pulumi.StringOutput)
}

// The key-value pairs associated with this label.
func (o GetLabelsLabelOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetLabelsLabel) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type GetLabelsLabelArrayOutput struct{ *pulumi.OutputState }

func (GetLabelsLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLabelsLabel)(nil)).Elem()
}

func (o GetLabelsLabelArrayOutput) ToGetLabelsLabelArrayOutput() GetLabelsLabelArrayOutput {
	return o
}

func (o GetLabelsLabelArrayOutput) ToGetLabelsLabelArrayOutputWithContext(ctx context.Context) GetLabelsLabelArrayOutput {
	return o
}

func (o GetLabelsLabelArrayOutput) Index(i pulumi.IntInput) GetLabelsLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLabelsLabel {
		return vs[0].([]GetLabelsLabel)[vs[1].(int)]
	}).(GetLabelsLabelOutput)
}

type GetOrganizationsOrganization struct {
	// Organization creation date.
	CreatedAt string `pulumi:"createdAt"`
	// The description of the organization.
	Description string `pulumi:"description"`
	// An organization ID.
	Id string `pulumi:"id"`
	// The name of the organization.
	Name string `pulumi:"name"`
	// Last Organization update date.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetOrganizationsOrganizationInput is an input type that accepts GetOrganizationsOrganizationArgs and GetOrganizationsOrganizationOutput values.
// You can construct a concrete instance of `GetOrganizationsOrganizationInput` via:
//
//	GetOrganizationsOrganizationArgs{...}
type GetOrganizationsOrganizationInput interface {
	pulumi.Input

	ToGetOrganizationsOrganizationOutput() GetOrganizationsOrganizationOutput
	ToGetOrganizationsOrganizationOutputWithContext(context.Context) GetOrganizationsOrganizationOutput
}

type GetOrganizationsOrganizationArgs struct {
	// Organization creation date.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of the organization.
	Description pulumi.StringInput `pulumi:"description"`
	// An organization ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the organization.
	Name pulumi.StringInput `pulumi:"name"`
	// Last Organization update date.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetOrganizationsOrganizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationsOrganization)(nil)).Elem()
}

func (i GetOrganizationsOrganizationArgs) ToGetOrganizationsOrganizationOutput() GetOrganizationsOrganizationOutput {
	return i.ToGetOrganizationsOrganizationOutputWithContext(context.Background())
}

func (i GetOrganizationsOrganizationArgs) ToGetOrganizationsOrganizationOutputWithContext(ctx context.Context) GetOrganizationsOrganizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationsOrganizationOutput)
}

// GetOrganizationsOrganizationArrayInput is an input type that accepts GetOrganizationsOrganizationArray and GetOrganizationsOrganizationArrayOutput values.
// You can construct a concrete instance of `GetOrganizationsOrganizationArrayInput` via:
//
//	GetOrganizationsOrganizationArray{ GetOrganizationsOrganizationArgs{...} }
type GetOrganizationsOrganizationArrayInput interface {
	pulumi.Input

	ToGetOrganizationsOrganizationArrayOutput() GetOrganizationsOrganizationArrayOutput
	ToGetOrganizationsOrganizationArrayOutputWithContext(context.Context) GetOrganizationsOrganizationArrayOutput
}

type GetOrganizationsOrganizationArray []GetOrganizationsOrganizationInput

func (GetOrganizationsOrganizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationsOrganization)(nil)).Elem()
}

func (i GetOrganizationsOrganizationArray) ToGetOrganizationsOrganizationArrayOutput() GetOrganizationsOrganizationArrayOutput {
	return i.ToGetOrganizationsOrganizationArrayOutputWithContext(context.Background())
}

func (i GetOrganizationsOrganizationArray) ToGetOrganizationsOrganizationArrayOutputWithContext(ctx context.Context) GetOrganizationsOrganizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationsOrganizationArrayOutput)
}

type GetOrganizationsOrganizationOutput struct{ *pulumi.OutputState }

func (GetOrganizationsOrganizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationsOrganization)(nil)).Elem()
}

func (o GetOrganizationsOrganizationOutput) ToGetOrganizationsOrganizationOutput() GetOrganizationsOrganizationOutput {
	return o
}

func (o GetOrganizationsOrganizationOutput) ToGetOrganizationsOrganizationOutputWithContext(ctx context.Context) GetOrganizationsOrganizationOutput {
	return o
}

// Organization creation date.
func (o GetOrganizationsOrganizationOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the organization.
func (o GetOrganizationsOrganizationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.Description }).(pulumi.StringOutput)
}

// An organization ID.
func (o GetOrganizationsOrganizationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the organization.
func (o GetOrganizationsOrganizationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.Name }).(pulumi.StringOutput)
}

// Last Organization update date.
func (o GetOrganizationsOrganizationOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetOrganizationsOrganizationArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationsOrganizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationsOrganization)(nil)).Elem()
}

func (o GetOrganizationsOrganizationArrayOutput) ToGetOrganizationsOrganizationArrayOutput() GetOrganizationsOrganizationArrayOutput {
	return o
}

func (o GetOrganizationsOrganizationArrayOutput) ToGetOrganizationsOrganizationArrayOutputWithContext(ctx context.Context) GetOrganizationsOrganizationArrayOutput {
	return o
}

func (o GetOrganizationsOrganizationArrayOutput) Index(i pulumi.IntInput) GetOrganizationsOrganizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationsOrganization {
		return vs[0].([]GetOrganizationsOrganization)[vs[1].(int)]
	}).(GetOrganizationsOrganizationOutput)
}

type GetTaskLabel struct {
	// The label ID.
	Id string `pulumi:"id"`
	// The label name.
	Name string `pulumi:"name"`
	// The organization ID.
	OrgId string `pulumi:"orgId"`
	// The key-value pairs associated with this label.
	Properties map[string]string `pulumi:"properties"`
}

// GetTaskLabelInput is an input type that accepts GetTaskLabelArgs and GetTaskLabelOutput values.
// You can construct a concrete instance of `GetTaskLabelInput` via:
//
//	GetTaskLabelArgs{...}
type GetTaskLabelInput interface {
	pulumi.Input

	ToGetTaskLabelOutput() GetTaskLabelOutput
	ToGetTaskLabelOutputWithContext(context.Context) GetTaskLabelOutput
}

type GetTaskLabelArgs struct {
	// The label ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The label name.
	Name pulumi.StringInput `pulumi:"name"`
	// The organization ID.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// The key-value pairs associated with this label.
	Properties pulumi.StringMapInput `pulumi:"properties"`
}

func (GetTaskLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTaskLabel)(nil)).Elem()
}

func (i GetTaskLabelArgs) ToGetTaskLabelOutput() GetTaskLabelOutput {
	return i.ToGetTaskLabelOutputWithContext(context.Background())
}

func (i GetTaskLabelArgs) ToGetTaskLabelOutputWithContext(ctx context.Context) GetTaskLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTaskLabelOutput)
}

// GetTaskLabelArrayInput is an input type that accepts GetTaskLabelArray and GetTaskLabelArrayOutput values.
// You can construct a concrete instance of `GetTaskLabelArrayInput` via:
//
//	GetTaskLabelArray{ GetTaskLabelArgs{...} }
type GetTaskLabelArrayInput interface {
	pulumi.Input

	ToGetTaskLabelArrayOutput() GetTaskLabelArrayOutput
	ToGetTaskLabelArrayOutputWithContext(context.Context) GetTaskLabelArrayOutput
}

type GetTaskLabelArray []GetTaskLabelInput

func (GetTaskLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTaskLabel)(nil)).Elem()
}

func (i GetTaskLabelArray) ToGetTaskLabelArrayOutput() GetTaskLabelArrayOutput {
	return i.ToGetTaskLabelArrayOutputWithContext(context.Background())
}

func (i GetTaskLabelArray) ToGetTaskLabelArrayOutputWithContext(ctx context.Context) GetTaskLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTaskLabelArrayOutput)
}

type GetTaskLabelOutput struct{ *pulumi.OutputState }

func (GetTaskLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTaskLabel)(nil)).Elem()
}

func (o GetTaskLabelOutput) ToGetTaskLabelOutput() GetTaskLabelOutput {
	return o
}

func (o GetTaskLabelOutput) ToGetTaskLabelOutputWithContext(ctx context.Context) GetTaskLabelOutput {
	return o
}

// The label ID.
func (o GetTaskLabelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskLabel) string { return v.Id }).(pulumi.StringOutput)
}

// The label name.
func (o GetTaskLabelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskLabel) string { return v.Name }).(pulumi.StringOutput)
}

// The organization ID.
func (o GetTaskLabelOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskLabel) string { return v.OrgId }).(pulumi.StringOutput)
}

// The key-value pairs associated with this label.
func (o GetTaskLabelOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetTaskLabel) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type GetTaskLabelArrayOutput struct{ *pulumi.OutputState }

func (GetTaskLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTaskLabel)(nil)).Elem()
}

func (o GetTaskLabelArrayOutput) ToGetTaskLabelArrayOutput() GetTaskLabelArrayOutput {
	return o
}

func (o GetTaskLabelArrayOutput) ToGetTaskLabelArrayOutputWithContext(ctx context.Context) GetTaskLabelArrayOutput {
	return o
}

func (o GetTaskLabelArrayOutput) Index(i pulumi.IntInput) GetTaskLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTaskLabel {
		return vs[0].([]GetTaskLabel)[vs[1].(int)]
	}).(GetTaskLabelOutput)
}

type GetTaskLinks struct {
	// URI of resource.
	Labels string `pulumi:"labels"`
	// URI of resource.
	Logs string `pulumi:"logs"`
	// URI of resource.
	Members string `pulumi:"members"`
	// URI of resource.
	Owners string `pulumi:"owners"`
	// URI of resource.
	Runs string `pulumi:"runs"`
	// URI of resource.
	Self string `pulumi:"self"`
}

// GetTaskLinksInput is an input type that accepts GetTaskLinksArgs and GetTaskLinksOutput values.
// You can construct a concrete instance of `GetTaskLinksInput` via:
//
//	GetTaskLinksArgs{...}
type GetTaskLinksInput interface {
	pulumi.Input

	ToGetTaskLinksOutput() GetTaskLinksOutput
	ToGetTaskLinksOutputWithContext(context.Context) GetTaskLinksOutput
}

type GetTaskLinksArgs struct {
	// URI of resource.
	Labels pulumi.StringInput `pulumi:"labels"`
	// URI of resource.
	Logs pulumi.StringInput `pulumi:"logs"`
	// URI of resource.
	Members pulumi.StringInput `pulumi:"members"`
	// URI of resource.
	Owners pulumi.StringInput `pulumi:"owners"`
	// URI of resource.
	Runs pulumi.StringInput `pulumi:"runs"`
	// URI of resource.
	Self pulumi.StringInput `pulumi:"self"`
}

func (GetTaskLinksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTaskLinks)(nil)).Elem()
}

func (i GetTaskLinksArgs) ToGetTaskLinksOutput() GetTaskLinksOutput {
	return i.ToGetTaskLinksOutputWithContext(context.Background())
}

func (i GetTaskLinksArgs) ToGetTaskLinksOutputWithContext(ctx context.Context) GetTaskLinksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTaskLinksOutput)
}

type GetTaskLinksOutput struct{ *pulumi.OutputState }

func (GetTaskLinksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTaskLinks)(nil)).Elem()
}

func (o GetTaskLinksOutput) ToGetTaskLinksOutput() GetTaskLinksOutput {
	return o
}

func (o GetTaskLinksOutput) ToGetTaskLinksOutputWithContext(ctx context.Context) GetTaskLinksOutput {
	return o
}

// URI of resource.
func (o GetTaskLinksOutput) Labels() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskLinks) string { return v.Labels }).(pulumi.StringOutput)
}

// URI of resource.
func (o GetTaskLinksOutput) Logs() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskLinks) string { return v.Logs }).(pulumi.StringOutput)
}

// URI of resource.
func (o GetTaskLinksOutput) Members() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskLinks) string { return v.Members }).(pulumi.StringOutput)
}

// URI of resource.
func (o GetTaskLinksOutput) Owners() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskLinks) string { return v.Owners }).(pulumi.StringOutput)
}

// URI of resource.
func (o GetTaskLinksOutput) Runs() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskLinks) string { return v.Runs }).(pulumi.StringOutput)
}

// URI of resource.
func (o GetTaskLinksOutput) Self() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskLinks) string { return v.Self }).(pulumi.StringOutput)
}

type GetTasksTask struct {
	// The authorization ID. Specifies the authorization used when the task communicates with the query engine.
	AuthorizationId string `pulumi:"authorizationId"`
	// The timestamp when the task was created.
	CreatedAt string `pulumi:"createdAt"`
	// The Cron expression that defines the schedule on which the task runs. InfluxDB uses the system time when evaluating Cron expressions.
	Cron string `pulumi:"cron"`
	// The description of the task.
	Description string `pulumi:"description"`
	// The interval [duration literal](https://docs.influxdata.com/influxdb/v2/reference/glossary/#rfc3339-timestamp) at which the task runs. every also determines when the task first runs, depending on the specified time.
	Every string `pulumi:"every"`
	// The Flux script that the task executes.
	Flux string `pulumi:"flux"`
	// The task ID.
	Id string `pulumi:"id"`
	// The labels associated with the task.
	Labels []GetTasksTaskLabel `pulumi:"labels"`
	// The error message from the last task run, if any.
	LastRunError string `pulumi:"lastRunError"`
	// The status of the last task run.
	LastRunStatus string `pulumi:"lastRunStatus"`
	// A timestamp [RFC3339 date/time format](https://docs.influxdata.com/influxdb/v2/reference/glossary/#rfc3339-timestamp) of the latest scheduled and completed run.
	LatestCompleted string `pulumi:"latestCompleted"`
	// Links related to the task.
	Links GetTasksTaskLinks `pulumi:"links"`
	// The name of the task.
	Name string `pulumi:"name"`
	// The duration to delay execution of the task after the scheduled time has elapsed. 0 removes the offset.
	Offset string `pulumi:"offset"`
	// The organization name. Specifies the organization that owns the task.
	Org string `pulumi:"org"`
	// The organization ID. Specifies the organization that owns the task.
	OrgId string `pulumi:"orgId"`
	// The user ID. Specifies the owner of the task.
	OwnerId string `pulumi:"ownerId"`
	// The status of the task (`active` or `inactive`).
	Status string `pulumi:"status"`
	// The timestamp when the task was last updated.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetTasksTaskInput is an input type that accepts GetTasksTaskArgs and GetTasksTaskOutput values.
// You can construct a concrete instance of `GetTasksTaskInput` via:
//
//	GetTasksTaskArgs{...}
type GetTasksTaskInput interface {
	pulumi.Input

	ToGetTasksTaskOutput() GetTasksTaskOutput
	ToGetTasksTaskOutputWithContext(context.Context) GetTasksTaskOutput
}

type GetTasksTaskArgs struct {
	// The authorization ID. Specifies the authorization used when the task communicates with the query engine.
	AuthorizationId pulumi.StringInput `pulumi:"authorizationId"`
	// The timestamp when the task was created.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The Cron expression that defines the schedule on which the task runs. InfluxDB uses the system time when evaluating Cron expressions.
	Cron pulumi.StringInput `pulumi:"cron"`
	// The description of the task.
	Description pulumi.StringInput `pulumi:"description"`
	// The interval [duration literal](https://docs.influxdata.com/influxdb/v2/reference/glossary/#rfc3339-timestamp) at which the task runs. every also determines when the task first runs, depending on the specified time.
	Every pulumi.StringInput `pulumi:"every"`
	// The Flux script that the task executes.
	Flux pulumi.StringInput `pulumi:"flux"`
	// The task ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The labels associated with the task.
	Labels GetTasksTaskLabelArrayInput `pulumi:"labels"`
	// The error message from the last task run, if any.
	LastRunError pulumi.StringInput `pulumi:"lastRunError"`
	// The status of the last task run.
	LastRunStatus pulumi.StringInput `pulumi:"lastRunStatus"`
	// A timestamp [RFC3339 date/time format](https://docs.influxdata.com/influxdb/v2/reference/glossary/#rfc3339-timestamp) of the latest scheduled and completed run.
	LatestCompleted pulumi.StringInput `pulumi:"latestCompleted"`
	// Links related to the task.
	Links GetTasksTaskLinksInput `pulumi:"links"`
	// The name of the task.
	Name pulumi.StringInput `pulumi:"name"`
	// The duration to delay execution of the task after the scheduled time has elapsed. 0 removes the offset.
	Offset pulumi.StringInput `pulumi:"offset"`
	// The organization name. Specifies the organization that owns the task.
	Org pulumi.StringInput `pulumi:"org"`
	// The organization ID. Specifies the organization that owns the task.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// The user ID. Specifies the owner of the task.
	OwnerId pulumi.StringInput `pulumi:"ownerId"`
	// The status of the task (`active` or `inactive`).
	Status pulumi.StringInput `pulumi:"status"`
	// The timestamp when the task was last updated.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetTasksTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTasksTask)(nil)).Elem()
}

func (i GetTasksTaskArgs) ToGetTasksTaskOutput() GetTasksTaskOutput {
	return i.ToGetTasksTaskOutputWithContext(context.Background())
}

func (i GetTasksTaskArgs) ToGetTasksTaskOutputWithContext(ctx context.Context) GetTasksTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTasksTaskOutput)
}

// GetTasksTaskArrayInput is an input type that accepts GetTasksTaskArray and GetTasksTaskArrayOutput values.
// You can construct a concrete instance of `GetTasksTaskArrayInput` via:
//
//	GetTasksTaskArray{ GetTasksTaskArgs{...} }
type GetTasksTaskArrayInput interface {
	pulumi.Input

	ToGetTasksTaskArrayOutput() GetTasksTaskArrayOutput
	ToGetTasksTaskArrayOutputWithContext(context.Context) GetTasksTaskArrayOutput
}

type GetTasksTaskArray []GetTasksTaskInput

func (GetTasksTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTasksTask)(nil)).Elem()
}

func (i GetTasksTaskArray) ToGetTasksTaskArrayOutput() GetTasksTaskArrayOutput {
	return i.ToGetTasksTaskArrayOutputWithContext(context.Background())
}

func (i GetTasksTaskArray) ToGetTasksTaskArrayOutputWithContext(ctx context.Context) GetTasksTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTasksTaskArrayOutput)
}

type GetTasksTaskOutput struct{ *pulumi.OutputState }

func (GetTasksTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTasksTask)(nil)).Elem()
}

func (o GetTasksTaskOutput) ToGetTasksTaskOutput() GetTasksTaskOutput {
	return o
}

func (o GetTasksTaskOutput) ToGetTasksTaskOutputWithContext(ctx context.Context) GetTasksTaskOutput {
	return o
}

// The authorization ID. Specifies the authorization used when the task communicates with the query engine.
func (o GetTasksTaskOutput) AuthorizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTask) string { return v.AuthorizationId }).(pulumi.StringOutput)
}

// The timestamp when the task was created.
func (o GetTasksTaskOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTask) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The Cron expression that defines the schedule on which the task runs. InfluxDB uses the system time when evaluating Cron expressions.
func (o GetTasksTaskOutput) Cron() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTask) string { return v.Cron }).(pulumi.StringOutput)
}

// The description of the task.
func (o GetTasksTaskOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTask) string { return v.Description }).(pulumi.StringOutput)
}

// The interval [duration literal](https://docs.influxdata.com/influxdb/v2/reference/glossary/#rfc3339-timestamp) at which the task runs. every also determines when the task first runs, depending on the specified time.
func (o GetTasksTaskOutput) Every() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTask) string { return v.Every }).(pulumi.StringOutput)
}

// The Flux script that the task executes.
func (o GetTasksTaskOutput) Flux() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTask) string { return v.Flux }).(pulumi.StringOutput)
}

// The task ID.
func (o GetTasksTaskOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTask) string { return v.Id }).(pulumi.StringOutput)
}

// The labels associated with the task.
func (o GetTasksTaskOutput) Labels() GetTasksTaskLabelArrayOutput {
	return o.ApplyT(func(v GetTasksTask) []GetTasksTaskLabel { return v.Labels }).(GetTasksTaskLabelArrayOutput)
}

// The error message from the last task run, if any.
func (o GetTasksTaskOutput) LastRunError() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTask) string { return v.LastRunError }).(pulumi.StringOutput)
}

// The status of the last task run.
func (o GetTasksTaskOutput) LastRunStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTask) string { return v.LastRunStatus }).(pulumi.StringOutput)
}

// A timestamp [RFC3339 date/time format](https://docs.influxdata.com/influxdb/v2/reference/glossary/#rfc3339-timestamp) of the latest scheduled and completed run.
func (o GetTasksTaskOutput) LatestCompleted() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTask) string { return v.LatestCompleted }).(pulumi.StringOutput)
}

// Links related to the task.
func (o GetTasksTaskOutput) Links() GetTasksTaskLinksOutput {
	return o.ApplyT(func(v GetTasksTask) GetTasksTaskLinks { return v.Links }).(GetTasksTaskLinksOutput)
}

// The name of the task.
func (o GetTasksTaskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTask) string { return v.Name }).(pulumi.StringOutput)
}

// The duration to delay execution of the task after the scheduled time has elapsed. 0 removes the offset.
func (o GetTasksTaskOutput) Offset() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTask) string { return v.Offset }).(pulumi.StringOutput)
}

// The organization name. Specifies the organization that owns the task.
func (o GetTasksTaskOutput) Org() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTask) string { return v.Org }).(pulumi.StringOutput)
}

// The organization ID. Specifies the organization that owns the task.
func (o GetTasksTaskOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTask) string { return v.OrgId }).(pulumi.StringOutput)
}

// The user ID. Specifies the owner of the task.
func (o GetTasksTaskOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTask) string { return v.OwnerId }).(pulumi.StringOutput)
}

// The status of the task (`active` or `inactive`).
func (o GetTasksTaskOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTask) string { return v.Status }).(pulumi.StringOutput)
}

// The timestamp when the task was last updated.
func (o GetTasksTaskOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTask) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetTasksTaskArrayOutput struct{ *pulumi.OutputState }

func (GetTasksTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTasksTask)(nil)).Elem()
}

func (o GetTasksTaskArrayOutput) ToGetTasksTaskArrayOutput() GetTasksTaskArrayOutput {
	return o
}

func (o GetTasksTaskArrayOutput) ToGetTasksTaskArrayOutputWithContext(ctx context.Context) GetTasksTaskArrayOutput {
	return o
}

func (o GetTasksTaskArrayOutput) Index(i pulumi.IntInput) GetTasksTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTasksTask {
		return vs[0].([]GetTasksTask)[vs[1].(int)]
	}).(GetTasksTaskOutput)
}

type GetTasksTaskLabel struct {
	// The label ID.
	Id string `pulumi:"id"`
	// The label name.
	Name string `pulumi:"name"`
	// The organization ID.
	OrgId string `pulumi:"orgId"`
	// The key-value pairs associated with this label.
	Properties map[string]string `pulumi:"properties"`
}

// GetTasksTaskLabelInput is an input type that accepts GetTasksTaskLabelArgs and GetTasksTaskLabelOutput values.
// You can construct a concrete instance of `GetTasksTaskLabelInput` via:
//
//	GetTasksTaskLabelArgs{...}
type GetTasksTaskLabelInput interface {
	pulumi.Input

	ToGetTasksTaskLabelOutput() GetTasksTaskLabelOutput
	ToGetTasksTaskLabelOutputWithContext(context.Context) GetTasksTaskLabelOutput
}

type GetTasksTaskLabelArgs struct {
	// The label ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The label name.
	Name pulumi.StringInput `pulumi:"name"`
	// The organization ID.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// The key-value pairs associated with this label.
	Properties pulumi.StringMapInput `pulumi:"properties"`
}

func (GetTasksTaskLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTasksTaskLabel)(nil)).Elem()
}

func (i GetTasksTaskLabelArgs) ToGetTasksTaskLabelOutput() GetTasksTaskLabelOutput {
	return i.ToGetTasksTaskLabelOutputWithContext(context.Background())
}

func (i GetTasksTaskLabelArgs) ToGetTasksTaskLabelOutputWithContext(ctx context.Context) GetTasksTaskLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTasksTaskLabelOutput)
}

// GetTasksTaskLabelArrayInput is an input type that accepts GetTasksTaskLabelArray and GetTasksTaskLabelArrayOutput values.
// You can construct a concrete instance of `GetTasksTaskLabelArrayInput` via:
//
//	GetTasksTaskLabelArray{ GetTasksTaskLabelArgs{...} }
type GetTasksTaskLabelArrayInput interface {
	pulumi.Input

	ToGetTasksTaskLabelArrayOutput() GetTasksTaskLabelArrayOutput
	ToGetTasksTaskLabelArrayOutputWithContext(context.Context) GetTasksTaskLabelArrayOutput
}

type GetTasksTaskLabelArray []GetTasksTaskLabelInput

func (GetTasksTaskLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTasksTaskLabel)(nil)).Elem()
}

func (i GetTasksTaskLabelArray) ToGetTasksTaskLabelArrayOutput() GetTasksTaskLabelArrayOutput {
	return i.ToGetTasksTaskLabelArrayOutputWithContext(context.Background())
}

func (i GetTasksTaskLabelArray) ToGetTasksTaskLabelArrayOutputWithContext(ctx context.Context) GetTasksTaskLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTasksTaskLabelArrayOutput)
}

type GetTasksTaskLabelOutput struct{ *pulumi.OutputState }

func (GetTasksTaskLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTasksTaskLabel)(nil)).Elem()
}

func (o GetTasksTaskLabelOutput) ToGetTasksTaskLabelOutput() GetTasksTaskLabelOutput {
	return o
}

func (o GetTasksTaskLabelOutput) ToGetTasksTaskLabelOutputWithContext(ctx context.Context) GetTasksTaskLabelOutput {
	return o
}

// The label ID.
func (o GetTasksTaskLabelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTaskLabel) string { return v.Id }).(pulumi.StringOutput)
}

// The label name.
func (o GetTasksTaskLabelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTaskLabel) string { return v.Name }).(pulumi.StringOutput)
}

// The organization ID.
func (o GetTasksTaskLabelOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTaskLabel) string { return v.OrgId }).(pulumi.StringOutput)
}

// The key-value pairs associated with this label.
func (o GetTasksTaskLabelOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetTasksTaskLabel) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type GetTasksTaskLabelArrayOutput struct{ *pulumi.OutputState }

func (GetTasksTaskLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTasksTaskLabel)(nil)).Elem()
}

func (o GetTasksTaskLabelArrayOutput) ToGetTasksTaskLabelArrayOutput() GetTasksTaskLabelArrayOutput {
	return o
}

func (o GetTasksTaskLabelArrayOutput) ToGetTasksTaskLabelArrayOutputWithContext(ctx context.Context) GetTasksTaskLabelArrayOutput {
	return o
}

func (o GetTasksTaskLabelArrayOutput) Index(i pulumi.IntInput) GetTasksTaskLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTasksTaskLabel {
		return vs[0].([]GetTasksTaskLabel)[vs[1].(int)]
	}).(GetTasksTaskLabelOutput)
}

type GetTasksTaskLinks struct {
	// URI of resource.
	Labels string `pulumi:"labels"`
	// URI of resource.
	Logs string `pulumi:"logs"`
	// URI of resource.
	Members string `pulumi:"members"`
	// URI of resource.
	Owners string `pulumi:"owners"`
	// URI of resource.
	Runs string `pulumi:"runs"`
	// URI of resource.
	Self string `pulumi:"self"`
}

// GetTasksTaskLinksInput is an input type that accepts GetTasksTaskLinksArgs and GetTasksTaskLinksOutput values.
// You can construct a concrete instance of `GetTasksTaskLinksInput` via:
//
//	GetTasksTaskLinksArgs{...}
type GetTasksTaskLinksInput interface {
	pulumi.Input

	ToGetTasksTaskLinksOutput() GetTasksTaskLinksOutput
	ToGetTasksTaskLinksOutputWithContext(context.Context) GetTasksTaskLinksOutput
}

type GetTasksTaskLinksArgs struct {
	// URI of resource.
	Labels pulumi.StringInput `pulumi:"labels"`
	// URI of resource.
	Logs pulumi.StringInput `pulumi:"logs"`
	// URI of resource.
	Members pulumi.StringInput `pulumi:"members"`
	// URI of resource.
	Owners pulumi.StringInput `pulumi:"owners"`
	// URI of resource.
	Runs pulumi.StringInput `pulumi:"runs"`
	// URI of resource.
	Self pulumi.StringInput `pulumi:"self"`
}

func (GetTasksTaskLinksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTasksTaskLinks)(nil)).Elem()
}

func (i GetTasksTaskLinksArgs) ToGetTasksTaskLinksOutput() GetTasksTaskLinksOutput {
	return i.ToGetTasksTaskLinksOutputWithContext(context.Background())
}

func (i GetTasksTaskLinksArgs) ToGetTasksTaskLinksOutputWithContext(ctx context.Context) GetTasksTaskLinksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTasksTaskLinksOutput)
}

type GetTasksTaskLinksOutput struct{ *pulumi.OutputState }

func (GetTasksTaskLinksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTasksTaskLinks)(nil)).Elem()
}

func (o GetTasksTaskLinksOutput) ToGetTasksTaskLinksOutput() GetTasksTaskLinksOutput {
	return o
}

func (o GetTasksTaskLinksOutput) ToGetTasksTaskLinksOutputWithContext(ctx context.Context) GetTasksTaskLinksOutput {
	return o
}

// URI of resource.
func (o GetTasksTaskLinksOutput) Labels() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTaskLinks) string { return v.Labels }).(pulumi.StringOutput)
}

// URI of resource.
func (o GetTasksTaskLinksOutput) Logs() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTaskLinks) string { return v.Logs }).(pulumi.StringOutput)
}

// URI of resource.
func (o GetTasksTaskLinksOutput) Members() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTaskLinks) string { return v.Members }).(pulumi.StringOutput)
}

// URI of resource.
func (o GetTasksTaskLinksOutput) Owners() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTaskLinks) string { return v.Owners }).(pulumi.StringOutput)
}

// URI of resource.
func (o GetTasksTaskLinksOutput) Runs() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTaskLinks) string { return v.Runs }).(pulumi.StringOutput)
}

// URI of resource.
func (o GetTasksTaskLinksOutput) Self() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksTaskLinks) string { return v.Self }).(pulumi.StringOutput)
}

type GetUsersUser struct {
	// The user ID.
	Id string `pulumi:"id"`
	// The user name.
	Name string `pulumi:"name"`
	// The organization ID that the user belongs to. Null if the user is not a member of any organization.
	OrgId string `pulumi:"orgId"`
	// The role of the user in the organization (`member` or `owner`). Null if the user is not a member of any organization.
	OrgRole string `pulumi:"orgRole"`
	// The password of the user. This will be always `null`.
	Password string `pulumi:"password"`
	// The status of a user.
	Status string `pulumi:"status"`
}

// GetUsersUserInput is an input type that accepts GetUsersUserArgs and GetUsersUserOutput values.
// You can construct a concrete instance of `GetUsersUserInput` via:
//
//	GetUsersUserArgs{...}
type GetUsersUserInput interface {
	pulumi.Input

	ToGetUsersUserOutput() GetUsersUserOutput
	ToGetUsersUserOutputWithContext(context.Context) GetUsersUserOutput
}

type GetUsersUserArgs struct {
	// The user ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The user name.
	Name pulumi.StringInput `pulumi:"name"`
	// The organization ID that the user belongs to. Null if the user is not a member of any organization.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// The role of the user in the organization (`member` or `owner`). Null if the user is not a member of any organization.
	OrgRole pulumi.StringInput `pulumi:"orgRole"`
	// The password of the user. This will be always `null`.
	Password pulumi.StringInput `pulumi:"password"`
	// The status of a user.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetUsersUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArgs) ToGetUsersUserOutput() GetUsersUserOutput {
	return i.ToGetUsersUserOutputWithContext(context.Background())
}

func (i GetUsersUserArgs) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserOutput)
}

// GetUsersUserArrayInput is an input type that accepts GetUsersUserArray and GetUsersUserArrayOutput values.
// You can construct a concrete instance of `GetUsersUserArrayInput` via:
//
//	GetUsersUserArray{ GetUsersUserArgs{...} }
type GetUsersUserArrayInput interface {
	pulumi.Input

	ToGetUsersUserArrayOutput() GetUsersUserArrayOutput
	ToGetUsersUserArrayOutputWithContext(context.Context) GetUsersUserArrayOutput
}

type GetUsersUserArray []GetUsersUserInput

func (GetUsersUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return i.ToGetUsersUserArrayOutputWithContext(context.Background())
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserArrayOutput)
}

type GetUsersUserOutput struct{ *pulumi.OutputState }

func (GetUsersUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserOutput) ToGetUsersUserOutput() GetUsersUserOutput {
	return o
}

func (o GetUsersUserOutput) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return o
}

// The user ID.
func (o GetUsersUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Id }).(pulumi.StringOutput)
}

// The user name.
func (o GetUsersUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Name }).(pulumi.StringOutput)
}

// The organization ID that the user belongs to. Null if the user is not a member of any organization.
func (o GetUsersUserOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.OrgId }).(pulumi.StringOutput)
}

// The role of the user in the organization (`member` or `owner`). Null if the user is not a member of any organization.
func (o GetUsersUserOutput) OrgRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.OrgRole }).(pulumi.StringOutput)
}

// The password of the user. This will be always `null`.
func (o GetUsersUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Password }).(pulumi.StringOutput)
}

// The status of a user.
func (o GetUsersUserOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Status }).(pulumi.StringOutput)
}

type GetUsersUserArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) Index(i pulumi.IntInput) GetUsersUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUser {
		return vs[0].([]GetUsersUser)[vs[1].(int)]
	}).(GetUsersUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPermissionInput)(nil)).Elem(), AuthorizationPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPermissionArrayInput)(nil)).Elem(), AuthorizationPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPermissionResourceInput)(nil)).Elem(), AuthorizationPermissionResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskLabelInput)(nil)).Elem(), TaskLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskLabelArrayInput)(nil)).Elem(), TaskLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskLinksInput)(nil)).Elem(), TaskLinksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskLinksPtrInput)(nil)).Elem(), TaskLinksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorizationPermissionInput)(nil)).Elem(), GetAuthorizationPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorizationPermissionArrayInput)(nil)).Elem(), GetAuthorizationPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorizationPermissionResourceInput)(nil)).Elem(), GetAuthorizationPermissionResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorizationsAuthorizationInput)(nil)).Elem(), GetAuthorizationsAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorizationsAuthorizationArrayInput)(nil)).Elem(), GetAuthorizationsAuthorizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorizationsAuthorizationPermissionInput)(nil)).Elem(), GetAuthorizationsAuthorizationPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorizationsAuthorizationPermissionArrayInput)(nil)).Elem(), GetAuthorizationsAuthorizationPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorizationsAuthorizationPermissionResourceInput)(nil)).Elem(), GetAuthorizationsAuthorizationPermissionResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketsBucketInput)(nil)).Elem(), GetBucketsBucketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketsBucketArrayInput)(nil)).Elem(), GetBucketsBucketArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLabelsLabelInput)(nil)).Elem(), GetLabelsLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLabelsLabelArrayInput)(nil)).Elem(), GetLabelsLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationsOrganizationInput)(nil)).Elem(), GetOrganizationsOrganizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationsOrganizationArrayInput)(nil)).Elem(), GetOrganizationsOrganizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTaskLabelInput)(nil)).Elem(), GetTaskLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTaskLabelArrayInput)(nil)).Elem(), GetTaskLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTaskLinksInput)(nil)).Elem(), GetTaskLinksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTasksTaskInput)(nil)).Elem(), GetTasksTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTasksTaskArrayInput)(nil)).Elem(), GetTasksTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTasksTaskLabelInput)(nil)).Elem(), GetTasksTaskLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTasksTaskLabelArrayInput)(nil)).Elem(), GetTasksTaskLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTasksTaskLinksInput)(nil)).Elem(), GetTasksTaskLinksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserInput)(nil)).Elem(), GetUsersUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserArrayInput)(nil)).Elem(), GetUsersUserArray{})
	pulumi.RegisterOutputType(AuthorizationPermissionOutput{})
	pulumi.RegisterOutputType(AuthorizationPermissionArrayOutput{})
	pulumi.RegisterOutputType(AuthorizationPermissionResourceOutput{})
	pulumi.RegisterOutputType(TaskLabelOutput{})
	pulumi.RegisterOutputType(TaskLabelArrayOutput{})
	pulumi.RegisterOutputType(TaskLinksOutput{})
	pulumi.RegisterOutputType(TaskLinksPtrOutput{})
	pulumi.RegisterOutputType(GetAuthorizationPermissionOutput{})
	pulumi.RegisterOutputType(GetAuthorizationPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetAuthorizationPermissionResourceOutput{})
	pulumi.RegisterOutputType(GetAuthorizationsAuthorizationOutput{})
	pulumi.RegisterOutputType(GetAuthorizationsAuthorizationArrayOutput{})
	pulumi.RegisterOutputType(GetAuthorizationsAuthorizationPermissionOutput{})
	pulumi.RegisterOutputType(GetAuthorizationsAuthorizationPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetAuthorizationsAuthorizationPermissionResourceOutput{})
	pulumi.RegisterOutputType(GetBucketsBucketOutput{})
	pulumi.RegisterOutputType(GetBucketsBucketArrayOutput{})
	pulumi.RegisterOutputType(GetLabelsLabelOutput{})
	pulumi.RegisterOutputType(GetLabelsLabelArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationsOrganizationOutput{})
	pulumi.RegisterOutputType(GetOrganizationsOrganizationArrayOutput{})
	pulumi.RegisterOutputType(GetTaskLabelOutput{})
	pulumi.RegisterOutputType(GetTaskLabelArrayOutput{})
	pulumi.RegisterOutputType(GetTaskLinksOutput{})
	pulumi.RegisterOutputType(GetTasksTaskOutput{})
	pulumi.RegisterOutputType(GetTasksTaskArrayOutput{})
	pulumi.RegisterOutputType(GetTasksTaskLabelOutput{})
	pulumi.RegisterOutputType(GetTasksTaskLabelArrayOutput{})
	pulumi.RegisterOutputType(GetTasksTaskLinksOutput{})
	pulumi.RegisterOutputType(GetUsersUserOutput{})
	pulumi.RegisterOutputType(GetUsersUserArrayOutput{})
}
