// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package influxdb

import (
	"context"
	"reflect"

	"github.com/komminarlabs/pulumi-influxdb/sdk/go/influxdb/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AuthorizationPermission struct {
	// Permission action. Valid values are `read` or `write`.
	Action   string                          `pulumi:"action"`
	Resource AuthorizationPermissionResource `pulumi:"resource"`
}

// AuthorizationPermissionInput is an input type that accepts AuthorizationPermissionArgs and AuthorizationPermissionOutput values.
// You can construct a concrete instance of `AuthorizationPermissionInput` via:
//
//	AuthorizationPermissionArgs{...}
type AuthorizationPermissionInput interface {
	pulumi.Input

	ToAuthorizationPermissionOutput() AuthorizationPermissionOutput
	ToAuthorizationPermissionOutputWithContext(context.Context) AuthorizationPermissionOutput
}

type AuthorizationPermissionArgs struct {
	// Permission action. Valid values are `read` or `write`.
	Action   pulumi.StringInput                   `pulumi:"action"`
	Resource AuthorizationPermissionResourceInput `pulumi:"resource"`
}

func (AuthorizationPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPermission)(nil)).Elem()
}

func (i AuthorizationPermissionArgs) ToAuthorizationPermissionOutput() AuthorizationPermissionOutput {
	return i.ToAuthorizationPermissionOutputWithContext(context.Background())
}

func (i AuthorizationPermissionArgs) ToAuthorizationPermissionOutputWithContext(ctx context.Context) AuthorizationPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPermissionOutput)
}

// AuthorizationPermissionArrayInput is an input type that accepts AuthorizationPermissionArray and AuthorizationPermissionArrayOutput values.
// You can construct a concrete instance of `AuthorizationPermissionArrayInput` via:
//
//	AuthorizationPermissionArray{ AuthorizationPermissionArgs{...} }
type AuthorizationPermissionArrayInput interface {
	pulumi.Input

	ToAuthorizationPermissionArrayOutput() AuthorizationPermissionArrayOutput
	ToAuthorizationPermissionArrayOutputWithContext(context.Context) AuthorizationPermissionArrayOutput
}

type AuthorizationPermissionArray []AuthorizationPermissionInput

func (AuthorizationPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPermission)(nil)).Elem()
}

func (i AuthorizationPermissionArray) ToAuthorizationPermissionArrayOutput() AuthorizationPermissionArrayOutput {
	return i.ToAuthorizationPermissionArrayOutputWithContext(context.Background())
}

func (i AuthorizationPermissionArray) ToAuthorizationPermissionArrayOutputWithContext(ctx context.Context) AuthorizationPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPermissionArrayOutput)
}

type AuthorizationPermissionOutput struct{ *pulumi.OutputState }

func (AuthorizationPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPermission)(nil)).Elem()
}

func (o AuthorizationPermissionOutput) ToAuthorizationPermissionOutput() AuthorizationPermissionOutput {
	return o
}

func (o AuthorizationPermissionOutput) ToAuthorizationPermissionOutputWithContext(ctx context.Context) AuthorizationPermissionOutput {
	return o
}

// Permission action. Valid values are `read` or `write`.
func (o AuthorizationPermissionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationPermission) string { return v.Action }).(pulumi.StringOutput)
}

func (o AuthorizationPermissionOutput) Resource() AuthorizationPermissionResourceOutput {
	return o.ApplyT(func(v AuthorizationPermission) AuthorizationPermissionResource { return v.Resource }).(AuthorizationPermissionResourceOutput)
}

type AuthorizationPermissionArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPermission)(nil)).Elem()
}

func (o AuthorizationPermissionArrayOutput) ToAuthorizationPermissionArrayOutput() AuthorizationPermissionArrayOutput {
	return o
}

func (o AuthorizationPermissionArrayOutput) ToAuthorizationPermissionArrayOutputWithContext(ctx context.Context) AuthorizationPermissionArrayOutput {
	return o
}

func (o AuthorizationPermissionArrayOutput) Index(i pulumi.IntInput) AuthorizationPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorizationPermission {
		return vs[0].([]AuthorizationPermission)[vs[1].(int)]
	}).(AuthorizationPermissionOutput)
}

type AuthorizationPermissionResource struct {
	// A resource ID. Identifies a specific resource.
	Id string `pulumi:"id"`
	// The name of the resource. **Note:** not all resource types have a name property.
	Name *string `pulumi:"name"`
	// An organization name. The organization that owns the resource.
	Org *string `pulumi:"org"`
	// An organization ID. Identifies the organization that owns the resource.
	OrgId string `pulumi:"orgId"`
	// A resource type. Identifies the API resource's type (or kind).
	Type string `pulumi:"type"`
}

// AuthorizationPermissionResourceInput is an input type that accepts AuthorizationPermissionResourceArgs and AuthorizationPermissionResourceOutput values.
// You can construct a concrete instance of `AuthorizationPermissionResourceInput` via:
//
//	AuthorizationPermissionResourceArgs{...}
type AuthorizationPermissionResourceInput interface {
	pulumi.Input

	ToAuthorizationPermissionResourceOutput() AuthorizationPermissionResourceOutput
	ToAuthorizationPermissionResourceOutputWithContext(context.Context) AuthorizationPermissionResourceOutput
}

type AuthorizationPermissionResourceArgs struct {
	// A resource ID. Identifies a specific resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the resource. **Note:** not all resource types have a name property.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// An organization name. The organization that owns the resource.
	Org pulumi.StringPtrInput `pulumi:"org"`
	// An organization ID. Identifies the organization that owns the resource.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// A resource type. Identifies the API resource's type (or kind).
	Type pulumi.StringInput `pulumi:"type"`
}

func (AuthorizationPermissionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPermissionResource)(nil)).Elem()
}

func (i AuthorizationPermissionResourceArgs) ToAuthorizationPermissionResourceOutput() AuthorizationPermissionResourceOutput {
	return i.ToAuthorizationPermissionResourceOutputWithContext(context.Background())
}

func (i AuthorizationPermissionResourceArgs) ToAuthorizationPermissionResourceOutputWithContext(ctx context.Context) AuthorizationPermissionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPermissionResourceOutput)
}

type AuthorizationPermissionResourceOutput struct{ *pulumi.OutputState }

func (AuthorizationPermissionResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPermissionResource)(nil)).Elem()
}

func (o AuthorizationPermissionResourceOutput) ToAuthorizationPermissionResourceOutput() AuthorizationPermissionResourceOutput {
	return o
}

func (o AuthorizationPermissionResourceOutput) ToAuthorizationPermissionResourceOutputWithContext(ctx context.Context) AuthorizationPermissionResourceOutput {
	return o
}

// A resource ID. Identifies a specific resource.
func (o AuthorizationPermissionResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationPermissionResource) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource. **Note:** not all resource types have a name property.
func (o AuthorizationPermissionResourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPermissionResource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// An organization name. The organization that owns the resource.
func (o AuthorizationPermissionResourceOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPermissionResource) *string { return v.Org }).(pulumi.StringPtrOutput)
}

// An organization ID. Identifies the organization that owns the resource.
func (o AuthorizationPermissionResourceOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationPermissionResource) string { return v.OrgId }).(pulumi.StringOutput)
}

// A resource type. Identifies the API resource's type (or kind).
func (o AuthorizationPermissionResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationPermissionResource) string { return v.Type }).(pulumi.StringOutput)
}

type GetAuthorizationPermission struct {
	// Permission action.
	Action   string                             `pulumi:"action"`
	Resource GetAuthorizationPermissionResource `pulumi:"resource"`
}

// GetAuthorizationPermissionInput is an input type that accepts GetAuthorizationPermissionArgs and GetAuthorizationPermissionOutput values.
// You can construct a concrete instance of `GetAuthorizationPermissionInput` via:
//
//	GetAuthorizationPermissionArgs{...}
type GetAuthorizationPermissionInput interface {
	pulumi.Input

	ToGetAuthorizationPermissionOutput() GetAuthorizationPermissionOutput
	ToGetAuthorizationPermissionOutputWithContext(context.Context) GetAuthorizationPermissionOutput
}

type GetAuthorizationPermissionArgs struct {
	// Permission action.
	Action   pulumi.StringInput                      `pulumi:"action"`
	Resource GetAuthorizationPermissionResourceInput `pulumi:"resource"`
}

func (GetAuthorizationPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationPermission)(nil)).Elem()
}

func (i GetAuthorizationPermissionArgs) ToGetAuthorizationPermissionOutput() GetAuthorizationPermissionOutput {
	return i.ToGetAuthorizationPermissionOutputWithContext(context.Background())
}

func (i GetAuthorizationPermissionArgs) ToGetAuthorizationPermissionOutputWithContext(ctx context.Context) GetAuthorizationPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorizationPermissionOutput)
}

// GetAuthorizationPermissionArrayInput is an input type that accepts GetAuthorizationPermissionArray and GetAuthorizationPermissionArrayOutput values.
// You can construct a concrete instance of `GetAuthorizationPermissionArrayInput` via:
//
//	GetAuthorizationPermissionArray{ GetAuthorizationPermissionArgs{...} }
type GetAuthorizationPermissionArrayInput interface {
	pulumi.Input

	ToGetAuthorizationPermissionArrayOutput() GetAuthorizationPermissionArrayOutput
	ToGetAuthorizationPermissionArrayOutputWithContext(context.Context) GetAuthorizationPermissionArrayOutput
}

type GetAuthorizationPermissionArray []GetAuthorizationPermissionInput

func (GetAuthorizationPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorizationPermission)(nil)).Elem()
}

func (i GetAuthorizationPermissionArray) ToGetAuthorizationPermissionArrayOutput() GetAuthorizationPermissionArrayOutput {
	return i.ToGetAuthorizationPermissionArrayOutputWithContext(context.Background())
}

func (i GetAuthorizationPermissionArray) ToGetAuthorizationPermissionArrayOutputWithContext(ctx context.Context) GetAuthorizationPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorizationPermissionArrayOutput)
}

type GetAuthorizationPermissionOutput struct{ *pulumi.OutputState }

func (GetAuthorizationPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationPermission)(nil)).Elem()
}

func (o GetAuthorizationPermissionOutput) ToGetAuthorizationPermissionOutput() GetAuthorizationPermissionOutput {
	return o
}

func (o GetAuthorizationPermissionOutput) ToGetAuthorizationPermissionOutputWithContext(ctx context.Context) GetAuthorizationPermissionOutput {
	return o
}

// Permission action.
func (o GetAuthorizationPermissionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationPermission) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetAuthorizationPermissionOutput) Resource() GetAuthorizationPermissionResourceOutput {
	return o.ApplyT(func(v GetAuthorizationPermission) GetAuthorizationPermissionResource { return v.Resource }).(GetAuthorizationPermissionResourceOutput)
}

type GetAuthorizationPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetAuthorizationPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorizationPermission)(nil)).Elem()
}

func (o GetAuthorizationPermissionArrayOutput) ToGetAuthorizationPermissionArrayOutput() GetAuthorizationPermissionArrayOutput {
	return o
}

func (o GetAuthorizationPermissionArrayOutput) ToGetAuthorizationPermissionArrayOutputWithContext(ctx context.Context) GetAuthorizationPermissionArrayOutput {
	return o
}

func (o GetAuthorizationPermissionArrayOutput) Index(i pulumi.IntInput) GetAuthorizationPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthorizationPermission {
		return vs[0].([]GetAuthorizationPermission)[vs[1].(int)]
	}).(GetAuthorizationPermissionOutput)
}

type GetAuthorizationPermissionResource struct {
	// A resource ID. Identifies a specific resource.
	Id string `pulumi:"id"`
	// The name of the resource. Note: not all resource types have a name property.
	Name string `pulumi:"name"`
	// An organization name. The organization that owns the resource.
	Org string `pulumi:"org"`
	// An organization ID. Identifies the organization that owns the resource.
	OrgId string `pulumi:"orgId"`
	// A resource type. Identifies the API resource's type (or kind).
	Type string `pulumi:"type"`
}

// GetAuthorizationPermissionResourceInput is an input type that accepts GetAuthorizationPermissionResourceArgs and GetAuthorizationPermissionResourceOutput values.
// You can construct a concrete instance of `GetAuthorizationPermissionResourceInput` via:
//
//	GetAuthorizationPermissionResourceArgs{...}
type GetAuthorizationPermissionResourceInput interface {
	pulumi.Input

	ToGetAuthorizationPermissionResourceOutput() GetAuthorizationPermissionResourceOutput
	ToGetAuthorizationPermissionResourceOutputWithContext(context.Context) GetAuthorizationPermissionResourceOutput
}

type GetAuthorizationPermissionResourceArgs struct {
	// A resource ID. Identifies a specific resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the resource. Note: not all resource types have a name property.
	Name pulumi.StringInput `pulumi:"name"`
	// An organization name. The organization that owns the resource.
	Org pulumi.StringInput `pulumi:"org"`
	// An organization ID. Identifies the organization that owns the resource.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// A resource type. Identifies the API resource's type (or kind).
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetAuthorizationPermissionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationPermissionResource)(nil)).Elem()
}

func (i GetAuthorizationPermissionResourceArgs) ToGetAuthorizationPermissionResourceOutput() GetAuthorizationPermissionResourceOutput {
	return i.ToGetAuthorizationPermissionResourceOutputWithContext(context.Background())
}

func (i GetAuthorizationPermissionResourceArgs) ToGetAuthorizationPermissionResourceOutputWithContext(ctx context.Context) GetAuthorizationPermissionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorizationPermissionResourceOutput)
}

type GetAuthorizationPermissionResourceOutput struct{ *pulumi.OutputState }

func (GetAuthorizationPermissionResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationPermissionResource)(nil)).Elem()
}

func (o GetAuthorizationPermissionResourceOutput) ToGetAuthorizationPermissionResourceOutput() GetAuthorizationPermissionResourceOutput {
	return o
}

func (o GetAuthorizationPermissionResourceOutput) ToGetAuthorizationPermissionResourceOutputWithContext(ctx context.Context) GetAuthorizationPermissionResourceOutput {
	return o
}

// A resource ID. Identifies a specific resource.
func (o GetAuthorizationPermissionResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationPermissionResource) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource. Note: not all resource types have a name property.
func (o GetAuthorizationPermissionResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationPermissionResource) string { return v.Name }).(pulumi.StringOutput)
}

// An organization name. The organization that owns the resource.
func (o GetAuthorizationPermissionResourceOutput) Org() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationPermissionResource) string { return v.Org }).(pulumi.StringOutput)
}

// An organization ID. Identifies the organization that owns the resource.
func (o GetAuthorizationPermissionResourceOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationPermissionResource) string { return v.OrgId }).(pulumi.StringOutput)
}

// A resource type. Identifies the API resource's type (or kind).
func (o GetAuthorizationPermissionResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationPermissionResource) string { return v.Type }).(pulumi.StringOutput)
}

type GetAuthorizationsAuthorization struct {
	// Authorizations creation date.
	CreatedAt string `pulumi:"createdAt"`
	// A description of the token.
	Description string `pulumi:"description"`
	// The authorization ID.
	Id string `pulumi:"id"`
	// An Organization name. Specifies the organization that owns the authorization.
	Org string `pulumi:"org"`
	// An organization ID. Specifies the organization that owns the authorization.
	OrgId string `pulumi:"orgId"`
	// A list of permissions for an authorization.
	Permissions []GetAuthorizationsAuthorizationPermission `pulumi:"permissions"`
	// Status of the token.
	Status string `pulumi:"status"`
	// The API token.
	Token string `pulumi:"token"`
	// Last Authorizations update date.
	UpdatedAt string `pulumi:"updatedAt"`
	// A user name. Specifies the user that the authorization is scoped to.
	User string `pulumi:"user"`
	// A user ID. Specifies the user that the authorization is scoped to.
	UserId string `pulumi:"userId"`
}

// GetAuthorizationsAuthorizationInput is an input type that accepts GetAuthorizationsAuthorizationArgs and GetAuthorizationsAuthorizationOutput values.
// You can construct a concrete instance of `GetAuthorizationsAuthorizationInput` via:
//
//	GetAuthorizationsAuthorizationArgs{...}
type GetAuthorizationsAuthorizationInput interface {
	pulumi.Input

	ToGetAuthorizationsAuthorizationOutput() GetAuthorizationsAuthorizationOutput
	ToGetAuthorizationsAuthorizationOutputWithContext(context.Context) GetAuthorizationsAuthorizationOutput
}

type GetAuthorizationsAuthorizationArgs struct {
	// Authorizations creation date.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// A description of the token.
	Description pulumi.StringInput `pulumi:"description"`
	// The authorization ID.
	Id pulumi.StringInput `pulumi:"id"`
	// An Organization name. Specifies the organization that owns the authorization.
	Org pulumi.StringInput `pulumi:"org"`
	// An organization ID. Specifies the organization that owns the authorization.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// A list of permissions for an authorization.
	Permissions GetAuthorizationsAuthorizationPermissionArrayInput `pulumi:"permissions"`
	// Status of the token.
	Status pulumi.StringInput `pulumi:"status"`
	// The API token.
	Token pulumi.StringInput `pulumi:"token"`
	// Last Authorizations update date.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// A user name. Specifies the user that the authorization is scoped to.
	User pulumi.StringInput `pulumi:"user"`
	// A user ID. Specifies the user that the authorization is scoped to.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetAuthorizationsAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationsAuthorization)(nil)).Elem()
}

func (i GetAuthorizationsAuthorizationArgs) ToGetAuthorizationsAuthorizationOutput() GetAuthorizationsAuthorizationOutput {
	return i.ToGetAuthorizationsAuthorizationOutputWithContext(context.Background())
}

func (i GetAuthorizationsAuthorizationArgs) ToGetAuthorizationsAuthorizationOutputWithContext(ctx context.Context) GetAuthorizationsAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorizationsAuthorizationOutput)
}

// GetAuthorizationsAuthorizationArrayInput is an input type that accepts GetAuthorizationsAuthorizationArray and GetAuthorizationsAuthorizationArrayOutput values.
// You can construct a concrete instance of `GetAuthorizationsAuthorizationArrayInput` via:
//
//	GetAuthorizationsAuthorizationArray{ GetAuthorizationsAuthorizationArgs{...} }
type GetAuthorizationsAuthorizationArrayInput interface {
	pulumi.Input

	ToGetAuthorizationsAuthorizationArrayOutput() GetAuthorizationsAuthorizationArrayOutput
	ToGetAuthorizationsAuthorizationArrayOutputWithContext(context.Context) GetAuthorizationsAuthorizationArrayOutput
}

type GetAuthorizationsAuthorizationArray []GetAuthorizationsAuthorizationInput

func (GetAuthorizationsAuthorizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorizationsAuthorization)(nil)).Elem()
}

func (i GetAuthorizationsAuthorizationArray) ToGetAuthorizationsAuthorizationArrayOutput() GetAuthorizationsAuthorizationArrayOutput {
	return i.ToGetAuthorizationsAuthorizationArrayOutputWithContext(context.Background())
}

func (i GetAuthorizationsAuthorizationArray) ToGetAuthorizationsAuthorizationArrayOutputWithContext(ctx context.Context) GetAuthorizationsAuthorizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorizationsAuthorizationArrayOutput)
}

type GetAuthorizationsAuthorizationOutput struct{ *pulumi.OutputState }

func (GetAuthorizationsAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationsAuthorization)(nil)).Elem()
}

func (o GetAuthorizationsAuthorizationOutput) ToGetAuthorizationsAuthorizationOutput() GetAuthorizationsAuthorizationOutput {
	return o
}

func (o GetAuthorizationsAuthorizationOutput) ToGetAuthorizationsAuthorizationOutputWithContext(ctx context.Context) GetAuthorizationsAuthorizationOutput {
	return o
}

// Authorizations creation date.
func (o GetAuthorizationsAuthorizationOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorization) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// A description of the token.
func (o GetAuthorizationsAuthorizationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorization) string { return v.Description }).(pulumi.StringOutput)
}

// The authorization ID.
func (o GetAuthorizationsAuthorizationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorization) string { return v.Id }).(pulumi.StringOutput)
}

// An Organization name. Specifies the organization that owns the authorization.
func (o GetAuthorizationsAuthorizationOutput) Org() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorization) string { return v.Org }).(pulumi.StringOutput)
}

// An organization ID. Specifies the organization that owns the authorization.
func (o GetAuthorizationsAuthorizationOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorization) string { return v.OrgId }).(pulumi.StringOutput)
}

// A list of permissions for an authorization.
func (o GetAuthorizationsAuthorizationOutput) Permissions() GetAuthorizationsAuthorizationPermissionArrayOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorization) []GetAuthorizationsAuthorizationPermission {
		return v.Permissions
	}).(GetAuthorizationsAuthorizationPermissionArrayOutput)
}

// Status of the token.
func (o GetAuthorizationsAuthorizationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorization) string { return v.Status }).(pulumi.StringOutput)
}

// The API token.
func (o GetAuthorizationsAuthorizationOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorization) string { return v.Token }).(pulumi.StringOutput)
}

// Last Authorizations update date.
func (o GetAuthorizationsAuthorizationOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorization) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// A user name. Specifies the user that the authorization is scoped to.
func (o GetAuthorizationsAuthorizationOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorization) string { return v.User }).(pulumi.StringOutput)
}

// A user ID. Specifies the user that the authorization is scoped to.
func (o GetAuthorizationsAuthorizationOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorization) string { return v.UserId }).(pulumi.StringOutput)
}

type GetAuthorizationsAuthorizationArrayOutput struct{ *pulumi.OutputState }

func (GetAuthorizationsAuthorizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorizationsAuthorization)(nil)).Elem()
}

func (o GetAuthorizationsAuthorizationArrayOutput) ToGetAuthorizationsAuthorizationArrayOutput() GetAuthorizationsAuthorizationArrayOutput {
	return o
}

func (o GetAuthorizationsAuthorizationArrayOutput) ToGetAuthorizationsAuthorizationArrayOutputWithContext(ctx context.Context) GetAuthorizationsAuthorizationArrayOutput {
	return o
}

func (o GetAuthorizationsAuthorizationArrayOutput) Index(i pulumi.IntInput) GetAuthorizationsAuthorizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthorizationsAuthorization {
		return vs[0].([]GetAuthorizationsAuthorization)[vs[1].(int)]
	}).(GetAuthorizationsAuthorizationOutput)
}

type GetAuthorizationsAuthorizationPermission struct {
	// Permission action.
	Action   string                                           `pulumi:"action"`
	Resource GetAuthorizationsAuthorizationPermissionResource `pulumi:"resource"`
}

// GetAuthorizationsAuthorizationPermissionInput is an input type that accepts GetAuthorizationsAuthorizationPermissionArgs and GetAuthorizationsAuthorizationPermissionOutput values.
// You can construct a concrete instance of `GetAuthorizationsAuthorizationPermissionInput` via:
//
//	GetAuthorizationsAuthorizationPermissionArgs{...}
type GetAuthorizationsAuthorizationPermissionInput interface {
	pulumi.Input

	ToGetAuthorizationsAuthorizationPermissionOutput() GetAuthorizationsAuthorizationPermissionOutput
	ToGetAuthorizationsAuthorizationPermissionOutputWithContext(context.Context) GetAuthorizationsAuthorizationPermissionOutput
}

type GetAuthorizationsAuthorizationPermissionArgs struct {
	// Permission action.
	Action   pulumi.StringInput                                    `pulumi:"action"`
	Resource GetAuthorizationsAuthorizationPermissionResourceInput `pulumi:"resource"`
}

func (GetAuthorizationsAuthorizationPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationsAuthorizationPermission)(nil)).Elem()
}

func (i GetAuthorizationsAuthorizationPermissionArgs) ToGetAuthorizationsAuthorizationPermissionOutput() GetAuthorizationsAuthorizationPermissionOutput {
	return i.ToGetAuthorizationsAuthorizationPermissionOutputWithContext(context.Background())
}

func (i GetAuthorizationsAuthorizationPermissionArgs) ToGetAuthorizationsAuthorizationPermissionOutputWithContext(ctx context.Context) GetAuthorizationsAuthorizationPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorizationsAuthorizationPermissionOutput)
}

// GetAuthorizationsAuthorizationPermissionArrayInput is an input type that accepts GetAuthorizationsAuthorizationPermissionArray and GetAuthorizationsAuthorizationPermissionArrayOutput values.
// You can construct a concrete instance of `GetAuthorizationsAuthorizationPermissionArrayInput` via:
//
//	GetAuthorizationsAuthorizationPermissionArray{ GetAuthorizationsAuthorizationPermissionArgs{...} }
type GetAuthorizationsAuthorizationPermissionArrayInput interface {
	pulumi.Input

	ToGetAuthorizationsAuthorizationPermissionArrayOutput() GetAuthorizationsAuthorizationPermissionArrayOutput
	ToGetAuthorizationsAuthorizationPermissionArrayOutputWithContext(context.Context) GetAuthorizationsAuthorizationPermissionArrayOutput
}

type GetAuthorizationsAuthorizationPermissionArray []GetAuthorizationsAuthorizationPermissionInput

func (GetAuthorizationsAuthorizationPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorizationsAuthorizationPermission)(nil)).Elem()
}

func (i GetAuthorizationsAuthorizationPermissionArray) ToGetAuthorizationsAuthorizationPermissionArrayOutput() GetAuthorizationsAuthorizationPermissionArrayOutput {
	return i.ToGetAuthorizationsAuthorizationPermissionArrayOutputWithContext(context.Background())
}

func (i GetAuthorizationsAuthorizationPermissionArray) ToGetAuthorizationsAuthorizationPermissionArrayOutputWithContext(ctx context.Context) GetAuthorizationsAuthorizationPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorizationsAuthorizationPermissionArrayOutput)
}

type GetAuthorizationsAuthorizationPermissionOutput struct{ *pulumi.OutputState }

func (GetAuthorizationsAuthorizationPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationsAuthorizationPermission)(nil)).Elem()
}

func (o GetAuthorizationsAuthorizationPermissionOutput) ToGetAuthorizationsAuthorizationPermissionOutput() GetAuthorizationsAuthorizationPermissionOutput {
	return o
}

func (o GetAuthorizationsAuthorizationPermissionOutput) ToGetAuthorizationsAuthorizationPermissionOutputWithContext(ctx context.Context) GetAuthorizationsAuthorizationPermissionOutput {
	return o
}

// Permission action.
func (o GetAuthorizationsAuthorizationPermissionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorizationPermission) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetAuthorizationsAuthorizationPermissionOutput) Resource() GetAuthorizationsAuthorizationPermissionResourceOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorizationPermission) GetAuthorizationsAuthorizationPermissionResource {
		return v.Resource
	}).(GetAuthorizationsAuthorizationPermissionResourceOutput)
}

type GetAuthorizationsAuthorizationPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetAuthorizationsAuthorizationPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorizationsAuthorizationPermission)(nil)).Elem()
}

func (o GetAuthorizationsAuthorizationPermissionArrayOutput) ToGetAuthorizationsAuthorizationPermissionArrayOutput() GetAuthorizationsAuthorizationPermissionArrayOutput {
	return o
}

func (o GetAuthorizationsAuthorizationPermissionArrayOutput) ToGetAuthorizationsAuthorizationPermissionArrayOutputWithContext(ctx context.Context) GetAuthorizationsAuthorizationPermissionArrayOutput {
	return o
}

func (o GetAuthorizationsAuthorizationPermissionArrayOutput) Index(i pulumi.IntInput) GetAuthorizationsAuthorizationPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthorizationsAuthorizationPermission {
		return vs[0].([]GetAuthorizationsAuthorizationPermission)[vs[1].(int)]
	}).(GetAuthorizationsAuthorizationPermissionOutput)
}

type GetAuthorizationsAuthorizationPermissionResource struct {
	// The authorization ID.
	Id string `pulumi:"id"`
	// The name of the resource. Note: not all resource types have a name property.
	Name string `pulumi:"name"`
	// An Organization name. Specifies the organization that owns the authorization.
	Org string `pulumi:"org"`
	// An organization ID. Specifies the organization that owns the authorization.
	OrgId string `pulumi:"orgId"`
	// A resource type. Identifies the API resource's type (or kind).
	Type string `pulumi:"type"`
}

// GetAuthorizationsAuthorizationPermissionResourceInput is an input type that accepts GetAuthorizationsAuthorizationPermissionResourceArgs and GetAuthorizationsAuthorizationPermissionResourceOutput values.
// You can construct a concrete instance of `GetAuthorizationsAuthorizationPermissionResourceInput` via:
//
//	GetAuthorizationsAuthorizationPermissionResourceArgs{...}
type GetAuthorizationsAuthorizationPermissionResourceInput interface {
	pulumi.Input

	ToGetAuthorizationsAuthorizationPermissionResourceOutput() GetAuthorizationsAuthorizationPermissionResourceOutput
	ToGetAuthorizationsAuthorizationPermissionResourceOutputWithContext(context.Context) GetAuthorizationsAuthorizationPermissionResourceOutput
}

type GetAuthorizationsAuthorizationPermissionResourceArgs struct {
	// The authorization ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the resource. Note: not all resource types have a name property.
	Name pulumi.StringInput `pulumi:"name"`
	// An Organization name. Specifies the organization that owns the authorization.
	Org pulumi.StringInput `pulumi:"org"`
	// An organization ID. Specifies the organization that owns the authorization.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// A resource type. Identifies the API resource's type (or kind).
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetAuthorizationsAuthorizationPermissionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationsAuthorizationPermissionResource)(nil)).Elem()
}

func (i GetAuthorizationsAuthorizationPermissionResourceArgs) ToGetAuthorizationsAuthorizationPermissionResourceOutput() GetAuthorizationsAuthorizationPermissionResourceOutput {
	return i.ToGetAuthorizationsAuthorizationPermissionResourceOutputWithContext(context.Background())
}

func (i GetAuthorizationsAuthorizationPermissionResourceArgs) ToGetAuthorizationsAuthorizationPermissionResourceOutputWithContext(ctx context.Context) GetAuthorizationsAuthorizationPermissionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorizationsAuthorizationPermissionResourceOutput)
}

type GetAuthorizationsAuthorizationPermissionResourceOutput struct{ *pulumi.OutputState }

func (GetAuthorizationsAuthorizationPermissionResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationsAuthorizationPermissionResource)(nil)).Elem()
}

func (o GetAuthorizationsAuthorizationPermissionResourceOutput) ToGetAuthorizationsAuthorizationPermissionResourceOutput() GetAuthorizationsAuthorizationPermissionResourceOutput {
	return o
}

func (o GetAuthorizationsAuthorizationPermissionResourceOutput) ToGetAuthorizationsAuthorizationPermissionResourceOutputWithContext(ctx context.Context) GetAuthorizationsAuthorizationPermissionResourceOutput {
	return o
}

// The authorization ID.
func (o GetAuthorizationsAuthorizationPermissionResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorizationPermissionResource) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource. Note: not all resource types have a name property.
func (o GetAuthorizationsAuthorizationPermissionResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorizationPermissionResource) string { return v.Name }).(pulumi.StringOutput)
}

// An Organization name. Specifies the organization that owns the authorization.
func (o GetAuthorizationsAuthorizationPermissionResourceOutput) Org() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorizationPermissionResource) string { return v.Org }).(pulumi.StringOutput)
}

// An organization ID. Specifies the organization that owns the authorization.
func (o GetAuthorizationsAuthorizationPermissionResourceOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorizationPermissionResource) string { return v.OrgId }).(pulumi.StringOutput)
}

// A resource type. Identifies the API resource's type (or kind).
func (o GetAuthorizationsAuthorizationPermissionResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationsAuthorizationPermissionResource) string { return v.Type }).(pulumi.StringOutput)
}

type GetBucketsBucket struct {
	// Bucket creation date.
	CreatedAt string `pulumi:"createdAt"`
	// A description of the bucket.
	Description string `pulumi:"description"`
	// A Bucket ID.
	Id string `pulumi:"id"`
	// A Bucket name.
	Name string `pulumi:"name"`
	// An organization ID.
	OrgId string `pulumi:"orgId"`
	// The duration in seconds for how long data will be kept in the database. `0` represents infinite retention.
	RetentionPeriod int `pulumi:"retentionPeriod"`
	// The Bucket type.
	Type string `pulumi:"type"`
	// Last bucket update date.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetBucketsBucketInput is an input type that accepts GetBucketsBucketArgs and GetBucketsBucketOutput values.
// You can construct a concrete instance of `GetBucketsBucketInput` via:
//
//	GetBucketsBucketArgs{...}
type GetBucketsBucketInput interface {
	pulumi.Input

	ToGetBucketsBucketOutput() GetBucketsBucketOutput
	ToGetBucketsBucketOutputWithContext(context.Context) GetBucketsBucketOutput
}

type GetBucketsBucketArgs struct {
	// Bucket creation date.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// A description of the bucket.
	Description pulumi.StringInput `pulumi:"description"`
	// A Bucket ID.
	Id pulumi.StringInput `pulumi:"id"`
	// A Bucket name.
	Name pulumi.StringInput `pulumi:"name"`
	// An organization ID.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// The duration in seconds for how long data will be kept in the database. `0` represents infinite retention.
	RetentionPeriod pulumi.IntInput `pulumi:"retentionPeriod"`
	// The Bucket type.
	Type pulumi.StringInput `pulumi:"type"`
	// Last bucket update date.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetBucketsBucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketsBucket)(nil)).Elem()
}

func (i GetBucketsBucketArgs) ToGetBucketsBucketOutput() GetBucketsBucketOutput {
	return i.ToGetBucketsBucketOutputWithContext(context.Background())
}

func (i GetBucketsBucketArgs) ToGetBucketsBucketOutputWithContext(ctx context.Context) GetBucketsBucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketsBucketOutput)
}

// GetBucketsBucketArrayInput is an input type that accepts GetBucketsBucketArray and GetBucketsBucketArrayOutput values.
// You can construct a concrete instance of `GetBucketsBucketArrayInput` via:
//
//	GetBucketsBucketArray{ GetBucketsBucketArgs{...} }
type GetBucketsBucketArrayInput interface {
	pulumi.Input

	ToGetBucketsBucketArrayOutput() GetBucketsBucketArrayOutput
	ToGetBucketsBucketArrayOutputWithContext(context.Context) GetBucketsBucketArrayOutput
}

type GetBucketsBucketArray []GetBucketsBucketInput

func (GetBucketsBucketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBucketsBucket)(nil)).Elem()
}

func (i GetBucketsBucketArray) ToGetBucketsBucketArrayOutput() GetBucketsBucketArrayOutput {
	return i.ToGetBucketsBucketArrayOutputWithContext(context.Background())
}

func (i GetBucketsBucketArray) ToGetBucketsBucketArrayOutputWithContext(ctx context.Context) GetBucketsBucketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketsBucketArrayOutput)
}

type GetBucketsBucketOutput struct{ *pulumi.OutputState }

func (GetBucketsBucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketsBucket)(nil)).Elem()
}

func (o GetBucketsBucketOutput) ToGetBucketsBucketOutput() GetBucketsBucketOutput {
	return o
}

func (o GetBucketsBucketOutput) ToGetBucketsBucketOutputWithContext(ctx context.Context) GetBucketsBucketOutput {
	return o
}

// Bucket creation date.
func (o GetBucketsBucketOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketsBucket) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// A description of the bucket.
func (o GetBucketsBucketOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketsBucket) string { return v.Description }).(pulumi.StringOutput)
}

// A Bucket ID.
func (o GetBucketsBucketOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketsBucket) string { return v.Id }).(pulumi.StringOutput)
}

// A Bucket name.
func (o GetBucketsBucketOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketsBucket) string { return v.Name }).(pulumi.StringOutput)
}

// An organization ID.
func (o GetBucketsBucketOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketsBucket) string { return v.OrgId }).(pulumi.StringOutput)
}

// The duration in seconds for how long data will be kept in the database. `0` represents infinite retention.
func (o GetBucketsBucketOutput) RetentionPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v GetBucketsBucket) int { return v.RetentionPeriod }).(pulumi.IntOutput)
}

// The Bucket type.
func (o GetBucketsBucketOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketsBucket) string { return v.Type }).(pulumi.StringOutput)
}

// Last bucket update date.
func (o GetBucketsBucketOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketsBucket) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetBucketsBucketArrayOutput struct{ *pulumi.OutputState }

func (GetBucketsBucketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBucketsBucket)(nil)).Elem()
}

func (o GetBucketsBucketArrayOutput) ToGetBucketsBucketArrayOutput() GetBucketsBucketArrayOutput {
	return o
}

func (o GetBucketsBucketArrayOutput) ToGetBucketsBucketArrayOutputWithContext(ctx context.Context) GetBucketsBucketArrayOutput {
	return o
}

func (o GetBucketsBucketArrayOutput) Index(i pulumi.IntInput) GetBucketsBucketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBucketsBucket {
		return vs[0].([]GetBucketsBucket)[vs[1].(int)]
	}).(GetBucketsBucketOutput)
}

type GetOrganizationsOrganization struct {
	// Organization creation date.
	CreatedAt string `pulumi:"createdAt"`
	// The description of the organization.
	Description string `pulumi:"description"`
	// An organization ID.
	Id string `pulumi:"id"`
	// The name of the organization.
	Name string `pulumi:"name"`
	// Last Organization update date.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetOrganizationsOrganizationInput is an input type that accepts GetOrganizationsOrganizationArgs and GetOrganizationsOrganizationOutput values.
// You can construct a concrete instance of `GetOrganizationsOrganizationInput` via:
//
//	GetOrganizationsOrganizationArgs{...}
type GetOrganizationsOrganizationInput interface {
	pulumi.Input

	ToGetOrganizationsOrganizationOutput() GetOrganizationsOrganizationOutput
	ToGetOrganizationsOrganizationOutputWithContext(context.Context) GetOrganizationsOrganizationOutput
}

type GetOrganizationsOrganizationArgs struct {
	// Organization creation date.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of the organization.
	Description pulumi.StringInput `pulumi:"description"`
	// An organization ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the organization.
	Name pulumi.StringInput `pulumi:"name"`
	// Last Organization update date.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetOrganizationsOrganizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationsOrganization)(nil)).Elem()
}

func (i GetOrganizationsOrganizationArgs) ToGetOrganizationsOrganizationOutput() GetOrganizationsOrganizationOutput {
	return i.ToGetOrganizationsOrganizationOutputWithContext(context.Background())
}

func (i GetOrganizationsOrganizationArgs) ToGetOrganizationsOrganizationOutputWithContext(ctx context.Context) GetOrganizationsOrganizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationsOrganizationOutput)
}

// GetOrganizationsOrganizationArrayInput is an input type that accepts GetOrganizationsOrganizationArray and GetOrganizationsOrganizationArrayOutput values.
// You can construct a concrete instance of `GetOrganizationsOrganizationArrayInput` via:
//
//	GetOrganizationsOrganizationArray{ GetOrganizationsOrganizationArgs{...} }
type GetOrganizationsOrganizationArrayInput interface {
	pulumi.Input

	ToGetOrganizationsOrganizationArrayOutput() GetOrganizationsOrganizationArrayOutput
	ToGetOrganizationsOrganizationArrayOutputWithContext(context.Context) GetOrganizationsOrganizationArrayOutput
}

type GetOrganizationsOrganizationArray []GetOrganizationsOrganizationInput

func (GetOrganizationsOrganizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationsOrganization)(nil)).Elem()
}

func (i GetOrganizationsOrganizationArray) ToGetOrganizationsOrganizationArrayOutput() GetOrganizationsOrganizationArrayOutput {
	return i.ToGetOrganizationsOrganizationArrayOutputWithContext(context.Background())
}

func (i GetOrganizationsOrganizationArray) ToGetOrganizationsOrganizationArrayOutputWithContext(ctx context.Context) GetOrganizationsOrganizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationsOrganizationArrayOutput)
}

type GetOrganizationsOrganizationOutput struct{ *pulumi.OutputState }

func (GetOrganizationsOrganizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationsOrganization)(nil)).Elem()
}

func (o GetOrganizationsOrganizationOutput) ToGetOrganizationsOrganizationOutput() GetOrganizationsOrganizationOutput {
	return o
}

func (o GetOrganizationsOrganizationOutput) ToGetOrganizationsOrganizationOutputWithContext(ctx context.Context) GetOrganizationsOrganizationOutput {
	return o
}

// Organization creation date.
func (o GetOrganizationsOrganizationOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the organization.
func (o GetOrganizationsOrganizationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.Description }).(pulumi.StringOutput)
}

// An organization ID.
func (o GetOrganizationsOrganizationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the organization.
func (o GetOrganizationsOrganizationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.Name }).(pulumi.StringOutput)
}

// Last Organization update date.
func (o GetOrganizationsOrganizationOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetOrganizationsOrganizationArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationsOrganizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationsOrganization)(nil)).Elem()
}

func (o GetOrganizationsOrganizationArrayOutput) ToGetOrganizationsOrganizationArrayOutput() GetOrganizationsOrganizationArrayOutput {
	return o
}

func (o GetOrganizationsOrganizationArrayOutput) ToGetOrganizationsOrganizationArrayOutputWithContext(ctx context.Context) GetOrganizationsOrganizationArrayOutput {
	return o
}

func (o GetOrganizationsOrganizationArrayOutput) Index(i pulumi.IntInput) GetOrganizationsOrganizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationsOrganization {
		return vs[0].([]GetOrganizationsOrganization)[vs[1].(int)]
	}).(GetOrganizationsOrganizationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPermissionInput)(nil)).Elem(), AuthorizationPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPermissionArrayInput)(nil)).Elem(), AuthorizationPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPermissionResourceInput)(nil)).Elem(), AuthorizationPermissionResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorizationPermissionInput)(nil)).Elem(), GetAuthorizationPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorizationPermissionArrayInput)(nil)).Elem(), GetAuthorizationPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorizationPermissionResourceInput)(nil)).Elem(), GetAuthorizationPermissionResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorizationsAuthorizationInput)(nil)).Elem(), GetAuthorizationsAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorizationsAuthorizationArrayInput)(nil)).Elem(), GetAuthorizationsAuthorizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorizationsAuthorizationPermissionInput)(nil)).Elem(), GetAuthorizationsAuthorizationPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorizationsAuthorizationPermissionArrayInput)(nil)).Elem(), GetAuthorizationsAuthorizationPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorizationsAuthorizationPermissionResourceInput)(nil)).Elem(), GetAuthorizationsAuthorizationPermissionResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketsBucketInput)(nil)).Elem(), GetBucketsBucketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketsBucketArrayInput)(nil)).Elem(), GetBucketsBucketArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationsOrganizationInput)(nil)).Elem(), GetOrganizationsOrganizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationsOrganizationArrayInput)(nil)).Elem(), GetOrganizationsOrganizationArray{})
	pulumi.RegisterOutputType(AuthorizationPermissionOutput{})
	pulumi.RegisterOutputType(AuthorizationPermissionArrayOutput{})
	pulumi.RegisterOutputType(AuthorizationPermissionResourceOutput{})
	pulumi.RegisterOutputType(GetAuthorizationPermissionOutput{})
	pulumi.RegisterOutputType(GetAuthorizationPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetAuthorizationPermissionResourceOutput{})
	pulumi.RegisterOutputType(GetAuthorizationsAuthorizationOutput{})
	pulumi.RegisterOutputType(GetAuthorizationsAuthorizationArrayOutput{})
	pulumi.RegisterOutputType(GetAuthorizationsAuthorizationPermissionOutput{})
	pulumi.RegisterOutputType(GetAuthorizationsAuthorizationPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetAuthorizationsAuthorizationPermissionResourceOutput{})
	pulumi.RegisterOutputType(GetBucketsBucketOutput{})
	pulumi.RegisterOutputType(GetBucketsBucketArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationsOrganizationOutput{})
	pulumi.RegisterOutputType(GetOrganizationsOrganizationArrayOutput{})
}
