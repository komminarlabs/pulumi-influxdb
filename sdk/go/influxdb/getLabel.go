// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package influxdb

import (
	"context"
	"reflect"

	"github.com/komminarlabs/pulumi-influxdb/sdk/go/influxdb/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a label with label ID.
func LookupLabel(ctx *pulumi.Context, args *LookupLabelArgs, opts ...pulumi.InvokeOption) (*LookupLabelResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLabelResult
	err := ctx.Invoke("influxdb:index/getLabel:getLabel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLabel.
type LookupLabelArgs struct {
	// The label ID.
	Id string `pulumi:"id"`
}

// A collection of values returned by getLabel.
type LookupLabelResult struct {
	// The label ID.
	Id string `pulumi:"id"`
	// The label name.
	Name string `pulumi:"name"`
	// The organization ID.
	OrgId string `pulumi:"orgId"`
	// The key-value pairs associated with this label.
	Properties map[string]string `pulumi:"properties"`
}

func LookupLabelOutput(ctx *pulumi.Context, args LookupLabelOutputArgs, opts ...pulumi.InvokeOption) LookupLabelResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupLabelResultOutput, error) {
			args := v.(LookupLabelArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("influxdb:index/getLabel:getLabel", args, LookupLabelResultOutput{}, options).(LookupLabelResultOutput), nil
		}).(LookupLabelResultOutput)
}

// A collection of arguments for invoking getLabel.
type LookupLabelOutputArgs struct {
	// The label ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupLabelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLabelArgs)(nil)).Elem()
}

// A collection of values returned by getLabel.
type LookupLabelResultOutput struct{ *pulumi.OutputState }

func (LookupLabelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLabelResult)(nil)).Elem()
}

func (o LookupLabelResultOutput) ToLookupLabelResultOutput() LookupLabelResultOutput {
	return o
}

func (o LookupLabelResultOutput) ToLookupLabelResultOutputWithContext(ctx context.Context) LookupLabelResultOutput {
	return o
}

// The label ID.
func (o LookupLabelResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLabelResult) string { return v.Id }).(pulumi.StringOutput)
}

// The label name.
func (o LookupLabelResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLabelResult) string { return v.Name }).(pulumi.StringOutput)
}

// The organization ID.
func (o LookupLabelResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLabelResult) string { return v.OrgId }).(pulumi.StringOutput)
}

// The key-value pairs associated with this label.
func (o LookupLabelResultOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupLabelResult) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLabelResultOutput{})
}
