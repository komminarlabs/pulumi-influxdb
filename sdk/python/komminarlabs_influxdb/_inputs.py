# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'AuthorizationPermissionArgs',
    'AuthorizationPermissionResourceArgs',
]

@pulumi.input_type
class AuthorizationPermissionArgs:
    def __init__(__self__, *,
                 action: pulumi.Input[str],
                 resource: pulumi.Input['AuthorizationPermissionResourceArgs']):
        """
        :param pulumi.Input[str] action: Permission action. Valid values are `read` or `write`.
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "resource", resource)

    @property
    @pulumi.getter
    def action(self) -> pulumi.Input[str]:
        """
        Permission action. Valid values are `read` or `write`.
        """
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: pulumi.Input[str]):
        pulumi.set(self, "action", value)

    @property
    @pulumi.getter
    def resource(self) -> pulumi.Input['AuthorizationPermissionResourceArgs']:
        return pulumi.get(self, "resource")

    @resource.setter
    def resource(self, value: pulumi.Input['AuthorizationPermissionResourceArgs']):
        pulumi.set(self, "resource", value)


@pulumi.input_type
class AuthorizationPermissionResourceArgs:
    def __init__(__self__, *,
                 id: pulumi.Input[str],
                 org_id: pulumi.Input[str],
                 type: pulumi.Input[str],
                 name: Optional[pulumi.Input[str]] = None,
                 org: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] id: A resource ID. Identifies a specific resource.
        :param pulumi.Input[str] org_id: An organization ID. Identifies the organization that owns the resource.
        :param pulumi.Input[str] type: A resource type. Identifies the API resource's type (or kind).
        :param pulumi.Input[str] name: The name of the resource. **Note:** not all resource types have a name property.
        :param pulumi.Input[str] org: An organization name. The organization that owns the resource.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "org_id", org_id)
        pulumi.set(__self__, "type", type)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if org is not None:
            pulumi.set(__self__, "org", org)

    @property
    @pulumi.getter
    def id(self) -> pulumi.Input[str]:
        """
        A resource ID. Identifies a specific resource.
        """
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: pulumi.Input[str]):
        pulumi.set(self, "id", value)

    @property
    @pulumi.getter(name="orgId")
    def org_id(self) -> pulumi.Input[str]:
        """
        An organization ID. Identifies the organization that owns the resource.
        """
        return pulumi.get(self, "org_id")

    @org_id.setter
    def org_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "org_id", value)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        A resource type. Identifies the API resource's type (or kind).
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the resource. **Note:** not all resource types have a name property.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def org(self) -> Optional[pulumi.Input[str]]:
        """
        An organization name. The organization that owns the resource.
        """
        return pulumi.get(self, "org")

    @org.setter
    def org(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "org", value)


